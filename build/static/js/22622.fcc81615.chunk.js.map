{"version":3,"file":"static/js/22622.fcc81615.chunk.js","mappings":"4GAGA,SAASA,EAAiBC,GACxB,MAAuB,kBAAZA,EACFC,OAAOC,SAASF,EAA4C,OAAnCA,EAAQG,OAAOC,UAAU,EAAG,GAAc,GAAK,IAE1D,kBAAZJ,EACFC,OAAOD,GAETA,CACT,C,0HCLA,MAAMK,UAAwBC,EAAAA,EAC5BC,WAAAA,CAAYC,GACVC,SACAC,EAAAA,EAAAA,GAAgBC,KAAM,kBAAkBX,IACtC,MAAMY,GAAKb,EAAAA,EAAAA,GAAiBC,GACtBa,GAAeF,KAAKH,QAAQM,OAAOC,MAAKC,GAAKA,EAAEhB,UAAYY,IACjED,KAAKM,KAAK,SAAU,CAClBC,MAAO,CACLN,KACAC,gBAEF,IAEJF,KAAKH,QAAUA,CACjB,CACA,aAAMW,CAAQC,GACRA,EAAKpB,SACPW,KAAKU,YAAYD,EAAKpB,SAExB,MAAMsB,QAAeX,KAAKY,YAE1B,aADsBD,EAAOE,YAE/B,CACA,gBAAMC,GACJd,KAAKe,eAAYC,EACjBhB,KAAKiB,aAAUD,CACjB,CACA,gBAAMH,GACJ,MAAMF,QAAeX,KAAKY,YAC1B,IAAKD,EACH,MAAM,IAAIO,MAAM,mBAElB,aAAaP,EAAOE,YACtB,CACA,iBAAMM,GACJ,IAEE,cADmBnB,KAAKa,YAE1B,CAAE,MACA,OAAO,CACT,CACF,CACA,iBAAMO,GAOJ,OANKpB,KAAKe,YACRf,KAAKe,WAAYM,EAAAA,EAAAA,IAAiBrB,KAAKH,QAAQU,MAAO,CACpDe,SAAUtB,KAAKH,QAAQyB,SACvBC,UAAWvB,KAAKH,QAAQ0B,aAGrBvB,KAAKe,SACd,CACA,eAAMH,GACJ,IAAKZ,KAAKiB,QAAS,CACjB,MAAMO,QAAiBxB,KAAKoB,cAC5BpB,KAAKiB,QAAUQ,EAAiBzB,KAAKH,QAAQc,OAAQa,EACvD,CACA,OAAOxB,KAAKiB,OACd,CACA,iBAAMP,CAAYrB,GAChB,MAAMkB,EAAQP,KAAKH,QAAQM,OAAOC,MAAKC,GAAKA,EAAEhB,UAAYA,IAC1D,IAAKkB,EACH,MAAM,IAAIW,MAAM,+BAADQ,OAAgCrC,EAAO,qEAExDW,KAAKe,WAAYM,EAAAA,EAAAA,IAAiBd,EAAO,CACvCe,SAAUtB,KAAKH,QAAQyB,SACvBC,UAAWvB,KAAKH,QAAQ0B,YAE1BvB,KAAKiB,QAAUQ,EAAiBzB,KAAKH,QAAQc,OAAQX,KAAKe,WAC1Df,KAAK2B,eAAetC,EACtB,CACA,oBAAMuC,GAAkB,CACxBC,YAAAA,CAAa1B,GACXH,KAAKH,QAAQM,OAASA,CACxB,EAEF,SAASsB,EAAiBd,EAAQa,GAChC,OAAIA,EACKb,EAAOH,QAAQgB,GAEjBb,CACT,C","sources":["../node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js","../node_modules/@thirdweb-dev/wallets/evm/connectors/signer/dist/thirdweb-dev-wallets-evm-connectors-signer.browser.esm.js"],"sourcesContent":["/**\n * @internal\n */\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { getChainProvider } from '@thirdweb-dev/sdk';\nimport 'eventemitter3';\n\nclass SignerConnector extends Connector {\n  constructor(options) {\n    super();\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = !this.options.chains.find(c => c.chainId === id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    this.options = options;\n  }\n  async connect(args) {\n    if (args.chainId) {\n      this.switchChain(args.chainId);\n    }\n    const signer = await this.getSigner();\n    const address = await signer.getAddress();\n    return address;\n  }\n  async disconnect() {\n    this._provider = undefined;\n    this._signer = undefined;\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    if (!signer) {\n      throw new Error(\"No signer found\");\n    }\n    return await signer.getAddress();\n  }\n  async isConnected() {\n    try {\n      const addr = await this.getAddress();\n      return !!addr;\n    } catch {\n      return false;\n    }\n  }\n  async getProvider() {\n    if (!this._provider) {\n      this._provider = getChainProvider(this.options.chain, {\n        clientId: this.options.clientId,\n        secretKey: this.options.secretKey\n      });\n    }\n    return this._provider;\n  }\n  async getSigner() {\n    if (!this._signer) {\n      const provider = await this.getProvider();\n      this._signer = getUpdatedSigner(this.options.signer, provider);\n    }\n    return this._signer;\n  }\n  async switchChain(chainId) {\n    const chain = this.options.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(`Chain not found for chainId ${chainId}, please add it to the chains property when creating this wallet`);\n    }\n    this._provider = getChainProvider(chain, {\n      clientId: this.options.clientId,\n      secretKey: this.options.secretKey\n    });\n    this._signer = getUpdatedSigner(this.options.signer, this._provider);\n    this.onChainChanged(chainId);\n  }\n  async setupListeners() {}\n  updateChains(chains) {\n    this.options.chains = chains;\n  }\n}\nfunction getUpdatedSigner(signer, provider) {\n  if (provider) {\n    return signer.connect(provider);\n  }\n  return signer;\n}\n\nexport { SignerConnector };\n"],"names":["normalizeChainId","chainId","Number","parseInt","trim","substring","SignerConnector","Connector","constructor","options","super","_defineProperty","this","id","unsupported","chains","find","c","emit","chain","connect","args","switchChain","signer","getSigner","getAddress","disconnect","_provider","undefined","_signer","Error","isConnected","getProvider","getChainProvider","clientId","secretKey","provider","getUpdatedSigner","concat","onChainChanged","setupListeners","updateChains"],"sourceRoot":""}