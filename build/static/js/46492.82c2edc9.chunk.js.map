{"version":3,"file":"static/js/46492.82c2edc9.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js","../node_modules/@thirdweb-dev/wallets/evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js"],"sourcesContent":["/**\n * @internal\n */\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { _ as _defineProperty } from '../../../../dist/defineProperty-350fc508.browser.esm.js';\nimport { utils } from 'ethers';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-dff6dced.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-05689d68.browser.esm.js';\nimport { E as EmbeddedWalletSdk, U as UserWalletStatus, c as AuthProvider } from '../../../../dist/embedded-wallet-e375380a.browser.esm.js';\nimport 'eventemitter3';\nimport '@paperxyz/sdk-common-utilities';\nimport 'ethers/lib/utils';\nimport '@thirdweb-dev/sdk';\n\nclass EmbeddedWalletConnector extends Connector {\n  constructor(options) {\n    super();\n    _defineProperty(this, \"id\", walletIds.paper);\n    _defineProperty(this, \"name\", \"Embedded Wallet\");\n    _defineProperty(this, \"ready\", true);\n    _defineProperty(this, \"user\", null);\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        await this.onDisconnect();\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.options.chains.findIndex(c => c.chainId === id) === -1;\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", async () => {\n      this.emit(\"disconnect\");\n    });\n    this.options = options;\n  }\n  getEmbeddedWalletSDK() {\n    if (!this._embeddedWalletSdk) {\n      this._embeddedWalletSdk = new EmbeddedWalletSdk({\n        clientId: this.options.clientId,\n        chain: \"Ethereum\",\n        onAuthSuccess: this.options.onAuthSuccess\n      });\n    }\n    return this._embeddedWalletSdk;\n  }\n  async connect(args) {\n    // backwards compatibility - options should really be required here\n    if (!args) {\n      // default to iframe flow\n      const result = await this.authenticate({\n        strategy: \"iframe\"\n      });\n      if (!result.user) {\n        throw new Error(\"Error connecting User\");\n      }\n      this.user = result.user;\n    } else {\n      if (!args.authResult) {\n        throw new Error(\"Missing authData - call authenticate() first with your authentication strategy\");\n      }\n      if (!args.authResult.user) {\n        throw new Error(\"Missing authData.user - call authenticate() first with your authentication strategy\");\n      }\n      this.user = args.authResult.user;\n    }\n    if (args?.chainId) {\n      this.switchChain(args.chainId);\n    }\n    return this.getAddress();\n  }\n  async disconnect() {\n    const paper = this._embeddedWalletSdk;\n    await paper?.auth.logout();\n    this._signer = undefined;\n    this._embeddedWalletSdk = undefined;\n    this.user = null;\n  }\n  async getAddress() {\n    if (!this.user) {\n      throw new Error(\"Embedded Wallet is not connected\");\n    }\n    return await this.getSigner().then(signer => signer.getAddress());\n  }\n  async isConnected() {\n    try {\n      const addr = await this.getAddress();\n      return !!addr;\n    } catch (e) {\n      return false;\n    }\n  }\n  async getProvider() {\n    const signer = await this.getSigner();\n    if (!signer.provider) {\n      throw new Error(\"Provider not found\");\n    }\n    return signer.provider;\n  }\n  async getSigner() {\n    if (this._signer) {\n      return this._signer;\n    }\n    const user = await this.getUser();\n    const signer = await user.wallet.getEthersJsSigner({\n      rpcEndpoint: this.options.chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\n    });\n    if (!signer) {\n      throw new Error(\"Signer not found\");\n    }\n    this._signer = signer;\n    return signer;\n  }\n  async isAuthorized() {\n    return false;\n  }\n  async switchChain(chainId) {\n    const chain = this.options.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(\"Chain not configured\");\n    }\n    try {\n      // update chain in wallet\n      await this.user?.wallet.setChain({\n        chain: \"Ethereum\"\n      }); // just pass Ethereum no matter what chain we are going to connect\n      // update signer\n      this._signer = await this.user?.wallet.getEthersJsSigner({\n        rpcEndpoint: chain.rpc[0] || \"\"\n      });\n      this.emit(\"change\", {\n        chain: {\n          id: chainId,\n          unsupported: false\n        }\n      });\n    } catch (e) {\n      console.warn(\"Failed to switch chain\", e);\n    }\n  }\n  async setupListeners() {\n    return Promise.resolve();\n  }\n  updateChains(chains) {\n    this.options.chains = chains;\n  }\n  async getUser() {\n    if (!this.user || !this.user.wallet || !this.user.wallet.getEthersJsSigner // when serializing, functions are lost, need to rehydrate\n    ) {\n      const embeddedWalletSdk = this.getEmbeddedWalletSDK();\n      const user = await embeddedWalletSdk.getUser();\n      switch (user.status) {\n        case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED:\n          {\n            this.user = user;\n            break;\n          }\n        default:\n          {\n            // if logged out or unitialized, we can't get a signer, so throw an error\n            throw new Error(\"Embedded Wallet is not authenticated, please authenticate first\");\n          }\n      }\n    }\n    return this.user;\n  }\n  async getEmail() {\n    const user = await this.getUser();\n    return user.authDetails.email;\n  }\n  async getPhoneNumber() {\n    const user = await this.getUser();\n    return user.authDetails.phoneNumber;\n  }\n  async getRecoveryInformation() {\n    const user = await this.getUser();\n    return user.authDetails;\n  }\n  async sendVerificationEmail(_ref) {\n    let {\n      email\n    } = _ref;\n    const ewSDK = this.getEmbeddedWalletSDK();\n    return ewSDK.auth.sendEmailLoginOtp({\n      email\n    });\n  }\n  async sendVerificationSms(_ref2) {\n    let {\n      phoneNumber\n    } = _ref2;\n    const ewSDK = this.getEmbeddedWalletSDK();\n    return ewSDK.auth.sendSmsLoginOtp({\n      phoneNumber\n    });\n  }\n  async authenticate(params) {\n    const ewSDK = this.getEmbeddedWalletSDK();\n    const strategy = params.strategy;\n    switch (strategy) {\n      case \"email_verification\":\n        {\n          return await ewSDK.auth.verifyEmailLoginOtp({\n            email: params.email,\n            otp: params.verificationCode,\n            recoveryCode: params.recoveryCode\n          });\n        }\n      case \"phone_number_verification\":\n        {\n          return await ewSDK.auth.verifySmsLoginOtp({\n            phoneNumber: params.phoneNumber,\n            otp: params.verificationCode,\n            recoveryCode: params.recoveryCode\n          });\n        }\n      case \"apple\":\n      case \"facebook\":\n      case \"google\":\n        {\n          const oauthProvider = oauthStrategyToAuthProvider[strategy];\n          return ewSDK.auth.loginWithOauth({\n            oauthProvider,\n            closeOpenedWindow: params.closeOpenedWindow,\n            openedWindow: params.openedWindow\n          });\n        }\n      case \"jwt\":\n        {\n          return ewSDK.auth.loginWithCustomJwt({\n            jwt: params.jwt,\n            encryptionKey: params.encryptionKey\n          });\n        }\n      case \"auth_endpoint\":\n        {\n          return ewSDK.auth.loginWithCustomAuthEndpoint({\n            payload: params.payload,\n            encryptionKey: params.encryptionKey\n          });\n        }\n      case \"iframe_email_verification\":\n        {\n          return ewSDK.auth.loginWithEmailOtp({\n            email: params.email\n          });\n        }\n      case \"iframe\":\n        {\n          return ewSDK.auth.loginWithModal();\n        }\n      default:\n        assertUnreachable(strategy);\n    }\n  }\n}\nfunction assertUnreachable(x) {\n  throw new Error(\"Invalid param: \" + x);\n}\nconst oauthStrategyToAuthProvider = {\n  google: AuthProvider.GOOGLE,\n  facebook: AuthProvider.FACEBOOK,\n  apple: AuthProvider.APPLE\n};\n\nexport { EmbeddedWalletConnector };\n"],"names":["normalizeChainId","chainId","Number","parseInt","trim","substring","EmbeddedWalletConnector","Connector","constructor","options","super","_defineProperty","this","walletIds","paper","async","accounts","length","onDisconnect","emit","account","utils","id","unsupported","chains","findIndex","c","chain","getEmbeddedWalletSDK","_embeddedWalletSdk","EmbeddedWalletSdk","clientId","onAuthSuccess","connect","args","authResult","Error","user","result","authenticate","strategy","switchChain","getAddress","disconnect","auth","logout","_signer","undefined","getSigner","then","signer","isConnected","e","getProvider","provider","getUser","wallet","getEthersJsSigner","rpcEndpoint","rpc","isAuthorized","find","_this$user","_this$user2","setChain","console","warn","setupListeners","Promise","resolve","updateChains","embeddedWalletSdk","status","UserWalletStatus","LOGGED_IN_WALLET_INITIALIZED","getEmail","authDetails","email","getPhoneNumber","phoneNumber","getRecoveryInformation","sendVerificationEmail","_ref","sendEmailLoginOtp","sendVerificationSms","_ref2","sendSmsLoginOtp","params","ewSDK","verifyEmailLoginOtp","otp","verificationCode","recoveryCode","verifySmsLoginOtp","oauthProvider","oauthStrategyToAuthProvider","loginWithOauth","closeOpenedWindow","openedWindow","loginWithCustomJwt","jwt","encryptionKey","loginWithCustomAuthEndpoint","payload","loginWithEmailOtp","loginWithModal","x","assertUnreachable","google","AuthProvider","GOOGLE","facebook","FACEBOOK","apple","APPLE"],"sourceRoot":""}