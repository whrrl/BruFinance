{"version":3,"file":"static/js/54174.0c748dc6.chunk.js","mappings":"iPA2DA,QA5CA,SAAgCA,GAM9B,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,OACb,aAAEC,IAAiBC,EAAAA,EAAAA,KACnBC,GAAUC,EAAAA,EAAAA,MACVC,GAASC,EAAAA,EAAAA,KAKf,MACwB,SAAtBL,EAAaM,MACZR,IAAWS,EAAAA,GAAgBC,MAA8B,YAAtBR,EAAaM,MAG/CG,EAAAA,EAAAA,KAACC,EAAAA,EAAiB,CAChBC,SAAUd,EAAMe,OAAOC,GACvBC,aAAcA,KACZZ,EAAQ,CAAC,GACTL,EAAMkB,QAAQ,IAMjBX,GAKHK,EAAAA,EAAAA,KAACO,EAAAA,EAAiB,CAChBZ,OAAQA,EACRQ,OAAQf,EAAMe,OACdK,KAAMpB,EAAMoB,KACZF,OAAQlB,EAAMkB,OACdG,OAAQrB,EAAMqB,UATTT,EAAAA,EAAAA,KAACU,EAAAA,EAAa,CAACC,OAAO,SAYjC,C","sources":["../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletSelectionUI.tsx"],"sourcesContent":["\"use client\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport { useSetSelectionData } from \"../../providers/wallet-ui-states-provider.js\";\nimport { useScreenContext } from \"../../ui/ConnectWallet/Modal/screen.js\";\nimport { WalletEntryButton } from \"../../ui/ConnectWallet/WalletEntryButton.js\";\nimport { reservedScreens } from \"../../ui/ConnectWallet/constants.js\";\nimport { LoadingScreen } from \"../shared/LoadingScreen.js\";\nimport { InAppWalletFormUI } from \"./InAppWalletFormUI.js\";\nimport { useInAppWalletLocale } from \"./useInAppWalletLocale.js\";\n\n/**\n *\n * @internal\n */\nfunction InAppWalletSelectionUI(props: {\n  select: () => void;\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  goBack?: () => void;\n}) {\n  const { screen } = useScreenContext();\n  const { connectModal } = useConnectUI();\n  const setData = useSetSelectionData();\n  const locale = useInAppWalletLocale();\n\n  // do not show the \"selectUI\" if\n  // modal is compact or\n  // it is being rendered in Safe wallet\n  if (\n    connectModal.size === \"wide\" ||\n    (screen !== reservedScreens.main && connectModal.size === \"compact\")\n  ) {\n    return (\n      <WalletEntryButton\n        walletId={props.wallet.id}\n        selectWallet={() => {\n          setData({});\n          props.select();\n        }}\n      />\n    );\n  }\n\n  if (!locale) {\n    return <LoadingScreen height=\"195px\" />;\n  }\n\n  return (\n    <InAppWalletFormUI\n      locale={locale}\n      wallet={props.wallet}\n      done={props.done}\n      select={props.select}\n      goBack={props.goBack}\n    />\n  );\n}\n\nexport default InAppWalletSelectionUI;\n"],"names":["props","screen","useScreenContext","connectModal","useConnectUI","setData","useSetSelectionData","locale","useInAppWalletLocale","size","reservedScreens","main","_jsx","WalletEntryButton","walletId","wallet","id","selectWallet","select","InAppWalletFormUI","done","goBack","LoadingScreen","height"],"sourceRoot":""}