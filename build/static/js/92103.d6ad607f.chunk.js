"use strict";(self.webpackChunkbru_finance=self.webpackChunkbru_finance||[]).push([[92103],{78527:(t,e,r)=>{r.d(e,{C:()=>a});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},43521:(t,e,r)=>{r.d(e,{C:()=>p});var a=r(54705),s=r(3404),o=r(63112),n=r(53053),i=r(81274),c=r(76328);class p{constructor(t,e){(0,a.A)(this,"featureName",o.d1.name),(0,a.A)(this,"setAll",(0,i.f)((async(t,e)=>{const r=e||await this.contractWrapper.getSignerAddress(),a=new c.C(this.contractWrapper),n=Object.keys(t);(0,s.A)(n.length,"you must provide at least one role to set"),(0,s.A)(n.every((t=>this.roles.includes(t))),"this contract does not support the given role");const p=await this.getAll(),l=[],h=n.sort((t=>"admin"===t?1:-1));for(let s=0;s<h.length;s++){var d,u;const e=h[s],[n,i]=await Promise.all([Promise.all((null===(d=t[e])||void 0===d?void 0:d.map((t=>(0,o.aM)(t))))||[]),Promise.all((null===(u=p[e])||void 0===u?void 0:u.map((t=>(0,o.aM)(t))))||[])]),c=n.filter((t=>!i.includes(t))),m=i.filter((t=>!n.includes(t)));if(m.length>1){const t=m.indexOf(r);t>-1&&(m.splice(t,1),m.push(r))}if(c.length&&c.forEach((t=>{l.push(a.encode("grantRole",[(0,o.H)(e),t]))})),m.length){(await Promise.all(m.map((t=>this.getRevokeRoleFunctionName(t))))).forEach(((t,r)=>l.push(a.encode(t,[(0,o.H)(e),m[r]]))))}}return i.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[l]})}))),(0,a.A)(this,"grant",(0,i.f)((async(t,e)=>{(0,s.A)(this.roles.includes(t),'this contract does not support the "'.concat(t,'" role'));const r=await(0,o.aM)(e);return i.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"grantRole",args:[(0,o.H)(t),r]})}))),(0,a.A)(this,"revoke",(0,i.f)((async(t,e)=>{(0,s.A)(this.roles.includes(t),'this contract does not support the "'.concat(t,'" role'));const r=await(0,o.aM)(e),a=await this.getRevokeRoleFunctionName(r);return i.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:a,args:[(0,o.H)(t),r]})}))),this.contractWrapper=t,this.roles=e}async getAll(){(0,s.A)(this.roles.length,"this contract has no support for roles");const t={},e=Object.entries(this.roles);return(await Promise.all(e.map((t=>{let[,e]=t;return this.get(e)})))).forEach(((r,a)=>t[e[a][1]]=r)),t}async get(t){(0,s.A)(this.roles.includes(t),'this contract does not support the "'.concat(t,'" role'));const e=this.contractWrapper;if((0,n.h)("getRoleMemberCount",e)&&(0,n.h)("getRoleMember",e)){const r=(0,o.H)(t),a=(await e.read("getRoleMemberCount",[r])).toNumber();return await Promise.all(Array.from(Array(a).keys()).map((t=>e.read("getRoleMember",[r,t]))))}throw new Error("Contract does not support enumerating roles. Please implement IPermissionsEnumerable to unlock this functionality.")}async verify(t,e){await Promise.all(t.map((async t=>{const[r,a]=await Promise.all([this.get(t),(0,o.aM)(e)]);if(!r.map((t=>t.toLowerCase())).includes(a.toLowerCase()))throw new o.o(a,t)})))}async getRevokeRoleFunctionName(t){const[e,r]=await Promise.all([(0,o.aM)(t),this.contractWrapper.getSignerAddress()]);return r.toLowerCase()===e.toLowerCase()?"renounceRole":"revokeRole"}}},92103:(t,e,r)=>{r.r(e),r.d(e,{Split:()=>d});var a=r(54705),s=r(2776),o=r(10974),n=r(76328),i=r(63112),c=r(81274),p=r(53053),l=r(78527),h=r(43521);r(6373),r(40462),r(28379);class d{get chainId(){return this._chainId}constructor(t,e,r){(0,a.A)(this,"withdraw",(0,c.f)((async t=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address)",args:[await(0,i.aM)(t)]})))),(0,a.A)(this,"withdrawToken",(0,c.f)((async(t,e)=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"release(address,address)",args:await Promise.all([(0,i.aM)(e),(0,i.aM)(t)])})))),(0,a.A)(this,"distribute",(0,c.f)((async()=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute()",args:[]})))),(0,a.A)(this,"distributeToken",(0,c.f)((async t=>c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"distribute(address)",args:[await(0,i.aM)(t)]}))));let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,u=arguments.length>5?arguments[5]:void 0,m=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new i.cs(t,e,o,s,r);this._chainId=u,this.abi=i.bk.parse(o||[]),this.contractWrapper=m,this.storage=r,this.metadata=new p.C(this.contractWrapper,i.c7,this.storage),this.app=new p.b(this.contractWrapper,this.metadata,this.storage),this.roles=new h.C(this.contractWrapper,d.contractRoles),this.encoder=new n.C(this.contractWrapper),this.estimator=new p.G(this.contractWrapper),this.events=new p.a(this.contractWrapper),this.interceptor=new l.C(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getAllRecipients(){const t=[];let e=s.gH.from(0);const r=await this.contractWrapper.read("payeeCount",[]);for(;e.lt(r);)try{const r=await this.contractWrapper.read("payee",[e]);t.push(await this.getRecipientSplitPercentage(r)),e=e.add(1)}catch(a){if("method"in a&&a.method.toLowerCase().includes("payee(uint256)"))break;throw a}return t}async balanceOfAllRecipients(){const t=await this.getAllRecipients(),e={};for(const r of t)e[r.address]=await this.balanceOf(r.address);return e}async balanceOfTokenAllRecipients(t){const[e,r]=await Promise.all([(0,i.aM)(t),this.getAllRecipients()]),a={};for(const s of r)a[s.address]=await this.balanceOfToken(s.address,e);return a}async balanceOf(t){const[e,r,a]=await Promise.all([(0,i.aM)(t),this.contractWrapper.getProvider().getBalance(this.getAddress()),this.contractWrapper.read("totalReleased",[])]),s=r.add(a);return this._pendingPayment(e,s,await this.contractWrapper.read("released",[e]))}async balanceOfToken(t,e){const[a,s]=await Promise.all([(0,i.aM)(e),(0,i.aM)(t)]),c=(await Promise.resolve().then(r.t.bind(r,96337,19))).default,p=new o.NZ(a,c,this.contractWrapper.getProvider()),[l,h,d]=await Promise.all([p.balanceOf(this.getAddress()),this.contractWrapper.read("totalReleased",[a]),this.contractWrapper.read("released",[a,s])]),u=l.add(h),m=await this._pendingPayment(s,u,d);return await(0,n.a)(this.contractWrapper.getProvider(),a,m)}async getRecipientSplitPercentage(t){const[e,r,a]=await Promise.all([(0,i.aM)(t),this.contractWrapper.read("totalShares",[]),this.contractWrapper.read("shares",[t])]);return{address:e,splitPercentage:a.mul(s.gH.from(1e7)).div(r).toNumber()/1e5}}async _pendingPayment(t,e,r){const[a,s]=await Promise.all([(0,i.aM)(t),this.contractWrapper.read("totalShares",[])]);return e.mul(await this.contractWrapper.read("shares",[a])).div(s).sub(r)}async prepare(t,e,r){return c.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:e,overrides:r})}async call(t,e,r){return this.contractWrapper.call(t,e,r)}}(0,a.A)(d,"contractRoles",i.dJ)}}]);
//# sourceMappingURL=92103.d6ad607f.chunk.js.map