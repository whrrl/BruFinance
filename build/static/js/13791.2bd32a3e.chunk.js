"use strict";(self.webpackChunkbru_finance=self.webpackChunkbru_finance||[]).push([[13791],{63601:(t,e,a)=>{a.d(e,{D:()=>g,H:()=>y,g:()=>m,h:()=>l,r:()=>u});var i=a(3678),r=a(89106),n=a(19547),s=a(50992),o=a(2776),c=a(54612),d=a(84406),h=a(92794),p=a(66396);async function l(t){const e=await i.resolveProperties(t);return Object.keys(e).map((t=>{let a=e[t];return"string"===typeof a&&a.startsWith("0x")||(a=r.hexValue(a)),[t,a]})).reduce(((t,e)=>{let[a,i]=e;return{...t,[a]:i}}),{})}async function m(t,e,a){const r=await i.resolveProperties(t),o={sender:r.sender,nonce:r.nonce,initCodeHash:n.keccak256(r.initCode),callDataHash:n.keccak256(r.callData),callGasLimit:r.callGasLimit,verificationGasLimit:r.verificationGasLimit,preVerificationGas:r.preVerificationGas,maxFeePerGas:r.maxFeePerGas,maxPriorityFeePerGas:r.maxPriorityFeePerGas,paymasterAndDataHash:n.keccak256(r.paymasterAndData)},c=s.D.encode([{components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes32",name:"initCodeHash"},{type:"bytes32",name:"callDataHash"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes32",name:"paymasterAndDataHash"}],name:"hashedUserOp",type:"tuple"}],[{...o}]),d=n.keccak256(c),h=s.D.encode(["bytes32","address","uint256"],[d,e,a]);return n.keccak256(h)}const u=()=>{let t=(()=>{const t=BigInt(Math.floor(4294967296*Math.random())),e=BigInt(Math.floor(4294967296*Math.random())),a=BigInt(Math.floor(4294967296*Math.random())),i=BigInt(Math.floor(4294967296*Math.random())),r=BigInt(Math.floor(4294967296*Math.random())),n=BigInt(Math.floor(4294967296*Math.random()));return t<<BigInt(160)|e<<BigInt(128)|a<<BigInt(96)|i<<BigInt(64)|r<<BigInt(32)|n})().toString(16);return t.length%2!==0&&(t="0"+t),t="0x"+t,o.gH.from(r.concat([t,"0x0000000000000000"]))},g=!1;class y{constructor(t,e,a,i,r){this.bundlerUrl=t,this.entryPointAddress=e,this.chainId=a;const n={};if((0,d.i)(this.bundlerUrl)){const t="undefined"!==typeof globalThis&&"APP_BUNDLE_ID"in globalThis?globalThis.APP_BUNDLE_ID:void 0;r?n["x-secret-key"]=r:i&&(n["x-client-id"]=i,t&&(n["x-bundle-id"]=t)),"undefined"!==typeof globalThis&&"TW_AUTH_TOKEN"in globalThis&&"string"===typeof globalThis.TW_AUTH_TOKEN&&(n.authorization="Bearer ".concat(globalThis.TW_AUTH_TOKEN)),"undefined"!==typeof globalThis&&"TW_CLI_AUTH_TOKEN"in globalThis&&"string"===typeof globalThis.TW_CLI_AUTH_TOKEN&&(n.authorization="Bearer ".concat(globalThis.TW_CLI_AUTH_TOKEN),n["x-authorize-wallet"]="true"),(0,h.s)(n)}this.userOpJsonRpcProvider=new c.B({url:this.bundlerUrl,headers:n},{name:"Connected bundler network",chainId:a}),this.initializing=this.validateChainId()}async validateChainId(){if(await(0,p.e)(this.chainId))return;const t=await this.userOpJsonRpcProvider.send("eth_chainId",[]),e=parseInt(t);if(e!==this.chainId)throw new Error("bundler ".concat(this.bundlerUrl," is on chainId ").concat(e,", but provider is on chainId ").concat(this.chainId))}async sendUserOpToBundler(t){await this.initializing;const e=await l(t),a=[e,this.entryPointAddress];return await this.printUserOperation("eth_sendUserOperation",a),await this.userOpJsonRpcProvider.send("eth_sendUserOperation",[e,this.entryPointAddress])}async estimateUserOpGas(t){await this.initializing;const e=await l(t),a=[e,this.entryPointAddress];await this.printUserOperation("eth_estimateUserOperationGas",a);const i=await this.userOpJsonRpcProvider.send("eth_estimateUserOperationGas",[e,this.entryPointAddress]);return{preVerificationGas:o.gH.from(i.preVerificationGas),verificationGas:o.gH.from(i.verificationGas),verificationGasLimit:o.gH.from(i.verificationGasLimit),callGasLimit:o.gH.from(i.callGasLimit).add(p.M)}}async getUserOperationGasPrice(){return await this.initializing,await this.userOpJsonRpcProvider.send("thirdweb_getUserOperationGasPrice",[])}async getUserOperationReceipt(t){return await this.initializing,await this.userOpJsonRpcProvider.send("eth_getUserOperationReceipt",[t])}async zkPaymasterData(t){return await this.initializing,await this.userOpJsonRpcProvider.send("zk_paymasterData",[await l({...t,gas:t.gasLimit})])}async zkBroadcastTransaction(t){return await this.initializing,await this.userOpJsonRpcProvider.send("zk_broadcastTransaction",[t])}async printUserOperation(t,e){}}},13791:(t,e,a)=>{a.d(e,{ZkSyncConnector:()=>P});var i=a(10019),r=a(19532),n=a(63601),s=a(66396),o=a(38298),c=a(2776),d=a(89106),h=a(27190),p=a(48987),l=a(86465),m=a(12220);a(28379),a(15452),a(84983);const u=5e4,g={Transaction:[{name:"txType",type:"uint256"},{name:"from",type:"uint256"},{name:"to",type:"uint256"},{name:"gasLimit",type:"uint256"},{name:"gasPerPubdataByteLimit",type:"uint256"},{name:"maxFeePerGas",type:"uint256"},{name:"maxPriorityFeePerGas",type:"uint256"},{name:"paymaster",type:"uint256"},{name:"nonce",type:"uint256"},{name:"value",type:"uint256"},{name:"data",type:"bytes"},{name:"factoryDeps",type:"bytes32[]"},{name:"paymasterInput",type:"bytes"}]};class y extends o.Signer{constructor(t,e){super(),this.signer=t,(0,m.defineReadOnly)(this,"provider",t.provider),this.httpRpcClient=e}async getAddress(){return await this.signer.getAddress()}async signMessage(t){return await this.signer.signMessage(t)}async signTransaction(t){return await this.signer.signTransaction(t)}connect(t){return new y(this.signer.connect(t),this.httpRpcClient)}_signTypedData(t,e,a){return this.signer._signTypedData(t,e,a)}async sendTransaction(t){return await this.sendZkSyncTransaction(t)}async sendZkSyncTransaction(t){var e,a,i,r,n,s,o,h;let p=await this.populateTransaction(t);if(!p.chainId)throw new Error("ChainId is required to send a ZkSync transaction");if(!this.provider)throw new Error("Provider is required to send a ZkSync transaction");const l=await this.getAddress(),m=c.gH.from(p.gasLimit||await this.provider.estimateGas(p)).mul(3),y=c.gH.from(p.gasPrice||await this.provider.getGasPrice()).mul(2);p.maxFeePerGas?p.maxFeePerGas=p.maxFeePerGas.mul(2):p.maxFeePerGas=y,p.maxPriorityFeePerGas?p.maxPriorityFeePerGas=p.maxPriorityFeePerGas.mul(2):p.maxPriorityFeePerGas=y,p={...p,from:l,gasLimit:m,gasPrice:y,chainId:(await this.provider.getNetwork()).chainId,nonce:await this.provider.getTransactionCount(l),type:113,value:BigInt(0)};const P=await(null===(e=this.httpRpcClient)||void 0===e?void 0:e.zkPaymasterData(p));p.customData={gasPerPubdata:u,factoryDeps:[],paymasterParams:{paymaster:P.paymaster,paymasterInput:P.paymasterInput}};const f={txType:113,from:BigInt(p.from||await this.getAddress()).toString(),to:BigInt(p.to||"0x0").toString(),gasLimit:p.gasLimit?Number(p.gasLimit):0,gasPerPubdataByteLimit:u,maxFeePerGas:c.gH.from(p.maxFeePerGas).toNumber(),maxPriorityFeePerGas:c.gH.from(p.maxPriorityFeePerGas).toNumber(),paymaster:BigInt(P.paymaster).toString(),nonce:c.gH.from(p.nonce).toNumber(),value:c.gH.from(p.value).toNumber(),data:p.data||"0x",factoryDeps:[],paymasterInput:d.arrayify(P.paymasterInput)},w=await this._signTypedData({name:"zkSync",version:"2",chainId:p.chainId},g,f),v=this.serialize(p,w),I={from:(null===(a=p.from)||void 0===a?void 0:a.toString())||await this.getAddress(),to:(null===(i=p.to)||void 0===i?void 0:i.toString())||"",gas:(null===(r=p.gasLimit)||void 0===r?void 0:r.toString())||"",maxFeePerGas:(null===(n=p.maxFeePerGas)||void 0===n?void 0:n.toString())||"0",maxPriorityFeePerGas:(null===(s=p.maxPriorityFeePerGas)||void 0===s?void 0:s.toString())||"0",signedTransaction:v,paymaster:P.paymaster},x=(await(null===(o=this.httpRpcClient)||void 0===o?void 0:o.zkBroadcastTransaction(I))).transactionHash;return await(null===(h=this.provider)||void 0===h?void 0:h.getTransaction(x))}serialize(t,e){var a,i;if(!t.customData&&113!==t.type)return h.serialize(t,e);if(!t.chainId)throw Error("Transaction chainId isn't set!");function r(t,e){const a=d.stripZeros(c.gH.from(t).toHexString());if(a.length>32)throw new Error("Invalid length for ".concat(e,"!"));return a}if(!t.from)throw new Error("Explicitly providing `from` field is required for EIP712 transactions!");const n=t.from,s=null!==(a=t.customData)&&void 0!==a?a:{},o=t.maxFeePerGas||t.gasPrice||0,m=t.maxPriorityFeePerGas||o,g=[r(t.nonce||0,"nonce"),r(m,"maxPriorityFeePerGas"),r(o,"maxFeePerGas"),r(t.gasLimit||0,"gasLimit"),t.to?p.getAddress(t.to):"0x",r(t.value||0,"value"),t.data||"0x"];if(e){const t=d.splitSignature(e);g.push(r(t.recoveryParam,"recoveryParam")),g.push(d.stripZeros(t.r)),g.push(d.stripZeros(t.s))}else g.push(r(t.chainId,"chainId")),g.push("0x"),g.push("0x");if(g.push(r(t.chainId,"chainId")),g.push(p.getAddress(n)),g.push(r(s.gasPerPubdata||u,"gasPerPubdata")),g.push((null!==(i=s.factoryDeps)&&void 0!==i?i:[]).map((t=>d.hexlify(t)))),s.customSignature&&0===d.arrayify(s.customSignature).length)throw new Error("Empty signatures are not supported!");return g.push(s.customSignature||"0x"),s.paymasterParams?g.push([s.paymasterParams.paymaster,d.hexlify(s.paymasterParams.paymasterInput)]):g.push([]),d.hexConcat([[113],l.encode(g)])}}class P extends r.C{constructor(t){super(),(0,i._)(this,"chainId",1),this.config=t}async connect(t){if(this.personalWallet=t.personalWallet,this.chainId=await(await this.personalWallet.getSigner()).getChainId(),!await(0,s.e)(this.chainId))throw new Error("Invalid zksync chain id");const e=this.config.bundlerUrl||"https://".concat(this.chainId,".bundler.thirdweb.com"),a=this.config.entryPointAddress||s.f;return this.httpRpcClient=new n.H(e,a,this.chainId,this.config.clientId,this.config.secretKey),this.getAddress()}disconnect(){throw new Error("Method not implemented.")}async getAddress(){return(await this.getSigner()).getAddress()}async getSigner(){if(!this.personalWallet)throw new Error("Wallet not connected");return new y(await this.personalWallet.getSigner(),this.httpRpcClient)}switchChain(t){throw new Error("Method not implemented.")}isConnected(){return Promise.resolve(!!this.personalWallet)}setupListeners(){throw new Error("Method not implemented.")}updateChains(t){throw new Error("Method not implemented.")}async getProvider(){if(!this.getSigner())throw new Error("Personal wallet not connected");const t=await this.getSigner();if(!t.provider)throw new Error("Provider not found");return t.provider}}}}]);
//# sourceMappingURL=13791.2bd32a3e.chunk.js.map