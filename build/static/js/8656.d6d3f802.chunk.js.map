{"version":3,"file":"static/js/8656.d6d3f802.chunk.js","mappings":"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","sources":["../node_modules/thirdweb/src/react/web/wallets/in-app/CountrySelector.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InputSelectionUI.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/socialIcons.ts","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletFormUI.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/validateEmail.ts","../node_modules/thirdweb/src/react/web/wallets/in-app/openOauthSignInWindow.ts","../node_modules/thirdweb/src/react/web/wallets/in-app/useInAppWalletLocale.ts","../node_modules/thirdweb/src/react/web/wallets/in-app/locale/getInAppWalletLocale.ts"],"sourcesContent":["\"use client\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useRef } from \"react\";\nimport { useCustomTheme } from \"../../ui/design-system/CustomThemeProvider.js\";\nimport { StyledOption, StyledSelect } from \"../../ui/design-system/elements.js\";\nimport { fontSize, radius, spacing } from \"../../ui/design-system/index.js\";\n\nexport function CountrySelector({\n  countryCode,\n  setCountryCode,\n}: {\n  countryCode: string;\n  setCountryCode: React.Dispatch<React.SetStateAction<string>>;\n}) {\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  const { data: supportedCountries } = useQuery({\n    queryKey: [\"supported-sms-countries\"],\n    queryFn: async () => {\n      const { supportedSmsCountries } = await import(\n        \"./supported-sms-countries.js\"\n      );\n      return supportedSmsCountries;\n    },\n  });\n\n  const supportedCountriesForSms = supportedCountries ?? [\n    {\n      countryIsoCode: \"US\",\n      countryName: \"United States\",\n      phoneNumberCode: 1,\n    },\n  ];\n\n  return (\n    <>\n      <Select\n        ref={selectRef}\n        name=\"countries\"\n        id=\"countries\"\n        value={countryCode}\n        onChange={(e) => {\n          setCountryCode(e.target.value);\n        }}\n        style={{\n          paddingLeft: spacing.md,\n          paddingRight: \"0\",\n        }}\n      >\n        <Option\n          style={{\n            display: \"none\",\n          }}\n          value={countryCode}\n        >\n          {countryCode}\n        </Option>\n        {supportedCountriesForSms.map((country) => {\n          return (\n            <Option\n              key={country.countryIsoCode}\n              value={`${country.countryIsoCode} +${country.phoneNumberCode}`}\n            >\n              {country.countryName} +{country.phoneNumberCode}{\" \"}\n            </Option>\n          );\n        })}\n      </Select>\n    </>\n  );\n}\n\nconst Option = /* @__PURE__ */ StyledOption(() => {\n  const theme = useCustomTheme();\n  return {\n    color: theme.colors.primaryText,\n    background: theme.colors.modalBg,\n    transition: \"background 0.3s ease\",\n    \"&:hover\": {\n      background: theme.colors.tertiaryBg,\n    },\n  };\n});\n\nconst Select = /* @__PURE__ */ StyledSelect(() => {\n  const theme = useCustomTheme();\n  return {\n    fontSize: fontSize.sm,\n    display: \"block\",\n    padding: spacing.sm,\n    boxSizing: \"border-box\",\n    outline: \"none\",\n    border: \"none\",\n    borderRadius: radius.lg,\n    color: theme.colors.primaryText,\n    WebkitAppearance: \"none\",\n    appearance: \"none\",\n    cursor: \"pointer\",\n    background: \"transparent\",\n    \"&::placeholder\": {\n      color: theme.colors.secondaryText,\n    },\n    \"&[disabled]\": {\n      cursor: \"not-allowed\",\n    },\n    minWidth: \"0px\",\n    maxWidth: \"90px\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  };\n});\n","\"use client\";\nimport { ArrowRightIcon } from \"@radix-ui/react-icons\";\nimport { useState } from \"react\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { IconButton } from \"../../ui/components/buttons.js\";\nimport { Input, InputContainer } from \"../../ui/components/formElements.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport { iconSize, radius, spacing } from \"../../ui/design-system/index.js\";\nimport { CountrySelector } from \"./CountrySelector.js\";\n\nexport function InputSelectionUI(props: {\n  onSelect: (data: string) => void;\n  placeholder: string;\n  name: string;\n  type: string;\n  errorMessage?: (input: string) => string | undefined;\n  emptyErrorMessage?: string;\n  submitButtonText: string;\n  format?: \"phone\";\n}) {\n  const [countryCodeInfo, setCountryCodeInfo] = useState(\"US +1\");\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState<string | undefined>();\n  const [showError, setShowError] = useState(false);\n\n  const handleSelect = () => {\n    setShowError(true);\n    if (!input || !!error) {\n      return;\n    }\n\n    props.onSelect(\n      props.format === \"phone\"\n        ? `+${countryCodeInfo.split(\"+\")[1]}${input}`\n        : input,\n    );\n  };\n\n  const renderingError =\n    (showError && !!error) ||\n    (!input && !!props.emptyErrorMessage && showError);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n      }}\n    >\n      <InputContainer\n        style={{\n          position: \"relative\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n        data-error={renderingError}\n      >\n        {props.format === \"phone\" && (\n          <CountrySelector\n            countryCode={countryCodeInfo}\n            setCountryCode={setCountryCodeInfo}\n          />\n        )}\n        <Input\n          tabIndex={-1}\n          placeholder={props.placeholder}\n          style={{\n            flexGrow: 1,\n            padding: `${spacing.md} ${\n              props.format === \"phone\" ? 0 : spacing.md\n            }`,\n          }}\n          variant=\"transparent\"\n          type={props.type}\n          name={props.name}\n          value={input}\n          onChange={(e) => {\n            setInput(e.target.value);\n            if (props.errorMessage) {\n              setError(props.errorMessage(e.target.value));\n            } else {\n              setError(undefined);\n            }\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              handleSelect();\n            }\n          }}\n        />\n        <IconButton\n          onClick={handleSelect}\n          style={{\n            padding: spacing.md,\n            borderRadius: `0 ${radius.lg} ${radius.lg} 0`,\n          }}\n        >\n          <ArrowRightIcon width={iconSize.md} height={iconSize.md} />\n        </IconButton>\n      </InputContainer>\n\n      {showError && error && (\n        <>\n          <Spacer y=\"xs\" />\n          <Text color=\"danger\" size=\"sm\">\n            {error}\n          </Text>\n        </>\n      )}\n\n      {!(showError && error) &&\n        !input &&\n        props.emptyErrorMessage &&\n        showError && (\n          <>\n            <Spacer y=\"xs\" />\n            <Text color=\"danger\" size=\"sm\">\n              {props.emptyErrorMessage}\n            </Text>\n          </>\n        )}\n    </div>\n  );\n}\n","import {\n  appleIconUri,\n  facebookIconUri,\n  googleIconUri,\n} from \"../../ui/ConnectWallet/icons/socialLogins.js\";\n\nexport const socialIcons = {\n  google: googleIconUri,\n  apple: appleIconUri,\n  facebook: facebookIconUri,\n};\n","\"use client\";\nimport styled from \"@emotion/styled\";\nimport { useState } from \"react\";\nimport type {\n  InAppWalletAuth,\n  InAppWalletSocialAuth,\n} from \"../../../../wallets/in-app/core/wallet/types.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport { useSetSelectionData } from \"../../providers/wallet-ui-states-provider.js\";\nimport { TOS } from \"../../ui/ConnectWallet/Modal/TOS.js\";\nimport { useScreenContext } from \"../../ui/ConnectWallet/Modal/screen.js\";\nimport { PoweredByThirdweb } from \"../../ui/ConnectWallet/PoweredByTW.js\";\nimport { WalletTypeRowButton } from \"../../ui/ConnectWallet/WalletTypeRowButton.js\";\nimport {\n  emailIcon,\n  passkeyIcon,\n  phoneIcon,\n} from \"../../ui/ConnectWallet/icons/dataUris.js\";\nimport { Img } from \"../../ui/components/Img.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { TextDivider } from \"../../ui/components/TextDivider.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { useCustomTheme } from \"../../ui/design-system/CustomThemeProvider.js\";\nimport { fontSize, iconSize, spacing } from \"../../ui/design-system/index.js\";\nimport { InputSelectionUI } from \"./InputSelectionUI.js\";\nimport type { InAppWalletLocale } from \"./locale/types.js\";\nimport { openOauthSignInWindow } from \"./openOauthSignInWindow.js\";\nimport { socialIcons } from \"./socialIcons.js\";\nimport { setLastAuthProvider } from \"./storage.js\";\nimport type { InAppWalletSelectUIState } from \"./types.js\";\nimport { validateEmail } from \"./validateEmail.js\";\n\nconst defaultAuthOptions: InAppWalletAuth[] = [\n  \"email\",\n  \"phone\",\n  \"google\",\n  \"apple\",\n  \"facebook\",\n  \"passkey\",\n];\n\nexport type InAppWalletFormUIProps = {\n  select: () => void;\n  locale: InAppWalletLocale;\n  done: () => void;\n  wallet: Wallet<\"inApp\">;\n  goBack?: () => void;\n};\n\n/**\n * @internal\n */\nexport const InAppWalletFormUI = (props: InAppWalletFormUIProps) => {\n  const locale = props.locale;\n  const { chain, client, connectModal } = useConnectUI();\n  const { wallet } = props;\n  const setData = useSetSelectionData() as (\n    value: InAppWalletSelectUIState,\n  ) => void;\n\n  const themeObj = useCustomTheme();\n\n  const loginMethodsLabel = {\n    google: locale.signInWithGoogle,\n    facebook: locale.signInWithFacebook,\n    apple: locale.signInWithApple,\n  };\n\n  const config = props.wallet.getConfig();\n  const authOptions = config?.auth?.options || defaultAuthOptions;\n  const passKeyEnabled = authOptions.includes(\"passkey\");\n\n  const emailIndex = authOptions.indexOf(\"email\");\n  const isEmailEnabled = emailIndex !== -1;\n  const phoneIndex = authOptions.indexOf(\"phone\");\n  const isPhoneEnabled = phoneIndex !== -1;\n\n  const [inputMode, setInputMode] = useState<\"email\" | \"phone\" | \"none\">(() => {\n    if (isEmailEnabled && isPhoneEnabled) {\n      return emailIndex < phoneIndex ? \"email\" : \"phone\";\n    }\n    if (isEmailEnabled) {\n      return \"email\";\n    }\n    if (isPhoneEnabled) {\n      return \"phone\";\n    }\n    return \"none\";\n  });\n\n  const placeholder =\n    inputMode === \"email\" ? locale.emailPlaceholder : locale.phonePlaceholder;\n  const emptyErrorMessage =\n    inputMode === \"email\" ? locale.emailRequired : locale.phoneRequired;\n\n  let type = \"text\";\n  if (inputMode === \"email\") {\n    type = \"email\";\n  } else if (inputMode === \"phone\") {\n    type = \"tel\";\n  }\n\n  const socialLogins = authOptions.filter(\n    (x) => x === \"google\" || x === \"apple\" || x === \"facebook\",\n  ) as InAppWalletSocialAuth[];\n\n  const hasSocialLogins = socialLogins.length > 0;\n\n  // Need to trigger login on button click to avoid popup from being blocked\n  const handleSocialLogin = async (strategy: InAppWalletSocialAuth) => {\n    try {\n      const socialLoginWindow = openOauthSignInWindow(strategy, themeObj);\n      if (!socialLoginWindow) {\n        throw new Error(\"Failed to open login window\");\n      }\n\n      const connectPromise = wallet.connect({\n        chain,\n        client,\n        strategy: strategy,\n        openedWindow: socialLoginWindow,\n        closeOpenedWindow: (openedWindow) => {\n          openedWindow.close();\n        },\n      });\n\n      await setLastAuthProvider(strategy);\n\n      setData({\n        socialLogin: {\n          type: strategy,\n          connectionPromise: connectPromise,\n        },\n      });\n\n      props.select(); // show Connect UI\n\n      // Note: do not call done() here, it will be called InAppWalletSocialLogin component\n      // we simply trigger the connect and save promise here - its resolution is handled in InAppWalletSocialLogin\n    } catch (e) {\n      console.error(`Error sign in with ${strategy}`, e);\n    }\n  };\n\n  function handlePassKeyLogin() {\n    setData({\n      passkeyLogin: true,\n    });\n    props.select();\n  }\n\n  const showOnlyIcons = socialLogins.length > 1;\n\n  if (\n    config?.metadata?.image &&\n    (!config.metadata.image.height || !config.metadata.image.width)\n  ) {\n    console.warn(\n      \"Image is not properly configured. Please set height and width.\",\n      config.metadata.image,\n    );\n  }\n\n  return (\n    <Container\n      flex=\"column\"\n      gap=\"md\"\n      style={{\n        position: \"relative\",\n      }}\n    >\n      {config?.metadata?.image && (\n        <Container flex=\"row\" center=\"both\">\n          <Img\n            loading=\"eager\"\n            client={client}\n            style={{\n              maxHeight: \"100px\",\n              maxWidth: \"300px\",\n            }}\n            src={config.metadata.image.src}\n            alt={config.metadata.image.alt}\n            width={Math.min(\n              config.metadata.image.width ?? 300,\n              300,\n            )?.toString()}\n            height={Math.min(\n              config.metadata.image.height ?? 100,\n              100,\n            )?.toString()}\n          />\n        </Container>\n      )}\n\n      {/* Social Login */}\n      {hasSocialLogins && (\n        <Container\n          flex={showOnlyIcons ? \"row\" : \"column\"}\n          center=\"x\"\n          gap=\"sm\"\n          style={{\n            justifyContent: \"space-between\",\n          }}\n        >\n          {socialLogins.map((loginMethod) => {\n            const imgIconSize = showOnlyIcons ? iconSize.lg : iconSize.md;\n            return (\n              <SocialButton\n                aria-label={`Login with ${loginMethod}`}\n                data-variant={showOnlyIcons ? \"icon\" : \"full\"}\n                key={loginMethod}\n                variant={\"outline\"}\n                fullWidth={!showOnlyIcons}\n                onClick={() => {\n                  handleSocialLogin(loginMethod);\n                }}\n              >\n                <Img\n                  src={socialIcons[loginMethod]}\n                  width={imgIconSize}\n                  height={imgIconSize}\n                  client={client}\n                />\n                {!showOnlyIcons && loginMethodsLabel[loginMethod]}\n              </SocialButton>\n            );\n          })}\n        </Container>\n      )}\n\n      {connectModal.size === \"wide\" &&\n        hasSocialLogins &&\n        (isEmailEnabled || isPhoneEnabled) && <TextDivider text={locale.or} />}\n\n      {/* Email/Phone Login */}\n      {isEmailEnabled && (\n        <>\n          {inputMode === \"email\" ? (\n            <InputSelectionUI\n              type={type}\n              onSelect={(value) => {\n                setData({ emailLogin: value });\n                props.select();\n              }}\n              placeholder={placeholder}\n              name=\"email\"\n              errorMessage={(input) => {\n                const isValidEmail = validateEmail(input.toLowerCase());\n                if (!isValidEmail) {\n                  return locale.invalidEmail;\n                }\n                return undefined;\n              }}\n              emptyErrorMessage={emptyErrorMessage}\n              submitButtonText={locale.submitEmail}\n            />\n          ) : (\n            <WalletTypeRowButton\n              client={client}\n              icon={emailIcon}\n              onClick={() => {\n                setInputMode(\"email\");\n              }}\n              // TODO locale\n              title={\"Email address\"}\n            />\n          )}\n        </>\n      )}\n      {isPhoneEnabled && (\n        <>\n          {inputMode === \"phone\" ? (\n            <InputSelectionUI\n              format=\"phone\"\n              type={type}\n              onSelect={(value) => {\n                // removes white spaces and special characters\n                setData({ phoneLogin: value.replace(/[-\\(\\) ]/g, \"\") });\n                props.select();\n              }}\n              placeholder={placeholder}\n              name=\"phone\"\n              errorMessage={(_input) => {\n                // removes white spaces and special characters\n                const input = _input.replace(/[-\\(\\) ]/g, \"\");\n                const isPhone = /^[0-9]+$/.test(input);\n\n                if (!isPhone && isPhoneEnabled) {\n                  return locale.invalidPhone;\n                }\n\n                return undefined;\n              }}\n              emptyErrorMessage={emptyErrorMessage}\n              submitButtonText={locale.submitEmail}\n            />\n          ) : (\n            <WalletTypeRowButton\n              client={client}\n              icon={phoneIcon}\n              onClick={() => {\n                setInputMode(\"phone\");\n              }}\n              // TODO locale\n              title={\"Phone number\"}\n            />\n          )}\n        </>\n      )}\n\n      {passKeyEnabled && (\n        <>\n          <WalletTypeRowButton\n            client={client}\n            icon={passkeyIcon}\n            onClick={() => {\n              handlePassKeyLogin();\n            }}\n            // TODO locale\n            title=\"Passkey\"\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\n/**\n * @internal\n */\nexport function InAppWalletFormUIScreen(props: InAppWalletFormUIProps) {\n  const locale = props.locale.emailLoginScreen;\n  const { connectModal } = useConnectUI();\n  const isCompact = connectModal.size === \"compact\";\n  const { initialScreen, screen } = useScreenContext();\n\n  const onBack =\n    screen === props.wallet && initialScreen === props.wallet\n      ? undefined\n      : props.goBack;\n\n  return (\n    <Container\n      fullHeight\n      flex=\"column\"\n      p=\"lg\"\n      animate=\"fadein\"\n      style={{\n        minHeight: \"250px\",\n      }}\n    >\n      {isCompact ? (\n        <>\n          <ModalHeader onBack={onBack} title={locale.title} />\n          <Spacer y=\"sm\" />\n        </>\n      ) : null}\n\n      <Container\n        expand\n        flex=\"column\"\n        center=\"y\"\n        p={isCompact ? undefined : \"lg\"}\n      >\n        <InAppWalletFormUI {...props} />\n      </Container>\n\n      {isCompact &&\n        (connectModal.showThirdwebBranding !== false ||\n          connectModal.termsOfServiceUrl ||\n          connectModal.privacyPolicyUrl) && <Spacer y=\"xl\" />}\n\n      <Container flex=\"column\" gap=\"lg\">\n        <TOS\n          termsOfServiceUrl={connectModal.termsOfServiceUrl}\n          privacyPolicyUrl={connectModal.privacyPolicyUrl}\n        />\n\n        {connectModal.showThirdwebBranding !== false && <PoweredByThirdweb />}\n      </Container>\n    </Container>\n  );\n}\n\nconst SocialButton = /* @__PURE__ */ styled(Button)({\n  \"&[data-variant='full']\": {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    padding: spacing.md,\n    gap: spacing.md,\n    fontSize: fontSize.md,\n    fontWeight: 500,\n    transition: \"background-color 0.2s ease\",\n    \"&:active\": {\n      boxShadow: \"none\",\n    },\n  },\n  \"&[data-variant='icon']\": {\n    padding: spacing.sm,\n    flexGrow: 1,\n  },\n});\n","// A super basic email validation function that is very forgiving to allow for a wide range emails\nexport function validateEmail(str: string) {\n  // <string> + @ + <string> + . + <string>\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n\n  return emailRegex.test(str.replace(/\\+/g, \"\"));\n}\n","import type { InAppWalletSocialAuth } from \"../../../../wallets/in-app/core/wallet/types.js\";\nimport type { Theme } from \"../../ui/design-system/index.js\";\n\nfunction getBodyTitle(authOption: InAppWalletSocialAuth) {\n  switch (authOption) {\n    case \"google\":\n      return \"Sign In - Google Accounts\";\n    default:\n      return `Sign In - ${authOption\n        .slice(0, 1)\n        .toUpperCase()}${authOption.slice(1)}`;\n  }\n}\n\nfunction getWidthAndHeight(authOption: InAppWalletSocialAuth) {\n  switch (authOption) {\n    case \"facebook\":\n      return { width: 715, height: 555 };\n    default:\n      return { width: 350, height: 500 };\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function openOauthSignInWindow(\n  authOption: InAppWalletSocialAuth,\n  themeObj: Theme,\n) {\n  // open the popup in the center of the screen\n  const { height, width } = getWidthAndHeight(authOption);\n  const top = (window.innerHeight - height) / 2;\n  const left = (window.innerWidth - width) / 2;\n\n  const win = window.open(\n    \"\",\n    undefined,\n    `width=${width}, height=${height}, top=${top}, left=${left}`,\n  );\n  if (win) {\n    const title = getBodyTitle(authOption);\n    win.document.title = title;\n    win.document.body.innerHTML = spinnerWindowHtml;\n    win.document.body.style.background = themeObj.colors.modalBg;\n    win.document.body.style.color = themeObj.colors.accentText;\n  }\n\n  // close it when current window is closed or refreshed\n  if (win) {\n    window.addEventListener(\"beforeunload\", () => {\n      win?.close();\n    });\n  }\n\n  return win;\n}\n\nconst spinnerWindowHtml = `\n<svg class=\"loader\" viewBox=\"0 0 50 50\">\n  <circle\n    cx=\"25\"\n    cy=\"25\"\n    r=\"20\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"4\"\n  />\n</svg>\n\n<style>\n  body,\n  html {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .loader {\n    width: 50px;\n    height: 50px;\n    animation: spin 2s linear infinite;\n  }\n\n  .loader circle {\n    animation: loading 1.5s linear infinite;\n  }\n\n  @keyframes loading {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n</style>\n`;\n","import { useEffect, useState } from \"react\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport { getInAppWalletLocale } from \"./locale/getInAppWalletLocale.js\";\nimport type { InAppWalletLocale } from \"./locale/types.js\";\n\n/**\n * @internal\n */\nexport function useInAppWalletLocale() {\n  const localeId = useConnectUI().locale;\n  const [locale, setLocale] = useState<InAppWalletLocale | undefined>(\n    undefined,\n  );\n\n  useEffect(() => {\n    getInAppWalletLocale(localeId).then((l) => {\n      setLocale(l);\n    });\n  }, [localeId]);\n\n  return locale;\n}\n","import type { LocaleId } from \"../../../ui/types.js\";\nimport type { InAppWalletLocale } from \"./types.js\";\n\n/**\n * @internal\n */\nexport async function getInAppWalletLocale(\n  localeId: LocaleId,\n): Promise<InAppWalletLocale> {\n  switch (localeId) {\n    case \"es_ES\":\n      return (await import(\"./es.js\")).default;\n    case \"ja_JP\":\n      return (await import(\"./ja.js\")).default;\n    case \"tl_PH\":\n      return (await import(\"./tl.js\")).default;\n    default:\n      return (await import(\"./en.js\")).default;\n  }\n}\n"],"names":["CountrySelector","_ref","countryCode","setCountryCode","selectRef","useRef","data","supportedCountries","useQuery","queryKey","queryFn","async","supportedSmsCountries","supportedCountriesForSms","countryIsoCode","countryName","phoneNumberCode","_jsx","_Fragment","children","_jsxs","Select","ref","name","id","value","onChange","e","target","style","paddingLeft","spacing","md","paddingRight","Option","display","map","country","concat","StyledOption","theme","useCustomTheme","color","colors","primaryText","background","modalBg","transition","tertiaryBg","StyledSelect","fontSize","sm","padding","boxSizing","outline","border","borderRadius","radius","lg","WebkitAppearance","appearance","cursor","secondaryText","minWidth","maxWidth","textOverflow","overflow","whiteSpace","InputSelectionUI","props","countryCodeInfo","setCountryCodeInfo","useState","input","setInput","error","setError","showError","setShowError","handleSelect","onSelect","format","split","renderingError","emptyErrorMessage","width","InputContainer","position","flexDirection","Input","tabIndex","placeholder","flexGrow","variant","type","errorMessage","undefined","onKeyDown","key","IconButton","onClick","ArrowRightIcon","iconSize","height","Spacer","y","Text","size","socialIcons","google","googleIconUri","apple","appleIconUri","facebook","facebookIconUri","defaultAuthOptions","InAppWalletFormUI","_config$auth","_config$metadata","_config$metadata2","_Math$min","_config$metadata$imag","_Math$min2","_config$metadata$imag2","locale","chain","client","connectModal","useConnectUI","wallet","setData","useSetSelectionData","themeObj","loginMethodsLabel","signInWithGoogle","signInWithFacebook","signInWithApple","config","getConfig","authOptions","auth","options","passKeyEnabled","includes","emailIndex","indexOf","isEmailEnabled","phoneIndex","isPhoneEnabled","inputMode","setInputMode","emailPlaceholder","phonePlaceholder","emailRequired","phoneRequired","socialLogins","filter","x","hasSocialLogins","length","showOnlyIcons","metadata","image","console","warn","Container","flex","gap","center","Img","loading","maxHeight","src","alt","Math","min","toString","justifyContent","loginMethod","imgIconSize","SocialButton","fullWidth","socialLoginWindow","openOauthSignInWindow","strategy","Error","connectPromise","connect","openedWindow","closeOpenedWindow","close","setLastAuthProvider","socialLogin","connectionPromise","select","handleSocialLogin","TextDivider","text","or","emailLogin","str","toLowerCase","test","replace","invalidEmail","submitButtonText","submitEmail","WalletTypeRowButton","icon","emailIcon","title","phoneLogin","_input","invalidPhone","phoneIcon","passkeyIcon","passkeyLogin","InAppWalletFormUIScreen","emailLoginScreen","isCompact","initialScreen","screen","useScreenContext","onBack","goBack","fullHeight","p","animate","minHeight","ModalHeader","expand","showThirdwebBranding","termsOfServiceUrl","privacyPolicyUrl","TOS","PoweredByThirdweb","styled","Button","fontWeight","boxShadow","authOption","getWidthAndHeight","top","window","innerHeight","left","innerWidth","win","open","slice","toUpperCase","getBodyTitle","document","body","innerHTML","spinnerWindowHtml","accentText","addEventListener","useInAppWalletLocale","localeId","setLocale","useEffect","default","getInAppWalletLocale","then","l"],"sourceRoot":""}