{"version":3,"file":"static/js/75791.47c2ce6d.chunk.js","mappings":"iPAGO,MAAMA,GAAyBC,EAAAA,EAAAA,IAAU,CAC9CC,UAAW,GAAFC,OAAKC,EAAAA,GAAe,oB,ICJlBC,E,gEAWP,SAAUC,EAASC,GAOvB,OACEC,EAAAA,EAAAA,KAACC,EAAiB,CAAAC,UAChBF,EAAAA,EAAAA,KAACG,EAAAA,GAAQ,CACPC,WAAYA,KACVL,EAAMM,SAAS,EAEjBC,UAAW,EACXC,MAAOR,EAAMQ,MACbC,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBT,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACC,KAAK,MAAMC,IAAI,KAAKC,OAAO,OAAMZ,SACzCQ,EAAMK,KAAI,CAACC,EAAMC,KAEhBjB,EAAAA,EAAAA,KAACkB,EAAI,IAAeF,EAAMG,UAAWpB,EAAMoB,WAAhCF,MAEH,EAEdG,SAAWC,IACTtB,EAAMuB,SAASD,EAAS,KAKlC,CAEA,MAAMpB,GAAoCR,EAAAA,EAAAA,IAAU,CAClD,UAAW,CACT8B,SAAU,UAId,SAASL,EAAKnB,GACZ,OACEyB,EAAAA,EAAAA,MAACC,EAAW,eAAc1B,EAAM2B,SAAQ,aAAc3B,EAAMoB,UAASjB,SAAA,CACnD,OAAfH,EAAM4B,OAAiB3B,EAAAA,EAAAA,KAAA,OAAAE,SAAMH,EAAM4B,OACnC5B,EAAM6B,eAAgB5B,EAAAA,EAAAA,KAAC6B,EAAS,MAGvC,CAEA,MAAMC,GAAaC,EAAAA,EAAAA,IAASlC,IAAAA,GAAAmC,EAAAA,EAAAA,GAAA,gFAStBH,GAAYpC,EAAAA,EAAAA,KAAU,KAC1B,MAAMwC,GAAQC,EAAAA,EAAAA,KACd,MAAO,CACLC,SAAU,WACVC,cAAe,OACfC,MAAO,EACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChB9C,UAAW,GAAFC,OAAKmC,EAAU,gBACxB,YAAa,CACXW,QAAS,KACTH,QAAS,QACTI,MAAO,QACPC,OAAQ,MACRC,gBAAiBX,EAAMY,OAAOC,aAEjC,IAGGrB,GAA8BhC,EAAAA,EAAAA,KAAU,KAC5C,MAAMwC,GAAQC,EAAAA,EAAAA,KACd,MAAO,CACLC,SAAU,WACVO,MAAO,OACPC,OAAQ,OACRI,UAAW,SACXT,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBQ,SAAUA,EAAAA,EAASC,GACnBC,QAASC,EAAAA,GAAQC,GACjBC,UAAW,aACXC,WAAY,mBACZC,OAAQ,aAAF5D,OAAesC,EAAMY,OAAOW,aAClC,wBAAyB,CACvBA,YAAavB,EAAMY,OAAOY,YAE5BC,MAAOzB,EAAMY,OAAOC,YACpBa,aAAcC,EAAAA,GAAOC,GACrB,uBAAwB,CACtBL,YAAavB,EAAMY,OAAOiB,QAE7B,I,yDC9EG,SAAUC,EAAsBhE,GAOpC,MAAM,OAAEiE,EAAM,KAAEC,EAAI,OAAEC,EAAM,SAAEC,GAAapE,GACrC,OAAEqE,EAAM,MAAEC,EAAK,aAAEC,IAAiBC,EAAAA,EAAAA,KAClCC,EAAoC,SAAtBF,EAAaG,KAC3BC,EAAS3E,EAAM2E,QACdC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAA6B,SAC9DG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAwB,YAE3DK,IAAUL,EAAAA,EAAAA,UAAuB,QAElCM,GAAiBC,EAAAA,EAAAA,cAAYC,UACjCT,EAAY,IACZG,EAAgB,QAChBE,EAAiB,WAEjB,IACE,GAAI,UAAWd,EAAU,CACvB,MAAMmB,QAAeC,EAAAA,EAAAA,IAAgB,CACnCC,MAAOrB,EAASqB,MAChBC,SAAU,QACVrB,WAEFa,EAAiBK,EACnB,KAAO,MAAI,UAAWnB,GAQpB,MAAM,IAAIuB,MAAM,oBARc,CAC9B,MAAMJ,QAAeC,EAAAA,EAAAA,IAAgB,CACnCI,YAAaxB,EAASyB,MACtBH,SAAU,QACVrB,WAEFa,EAAiBK,EACnB,CAEA,CACF,CAAE,MAAOO,GACPC,QAAQC,MAAMF,GACdd,EAAgB,QAChBE,EAAiB,QACnB,IACC,CAACb,EAAQD,IAEZkB,eAAeW,EAAQC,GACrB,GAAI,UAAW9B,QACPH,EAAOgC,QAAQ,CACnB3B,QACAoB,SAAU,QACVD,MAAOrB,EAASqB,MAChBU,iBAAkBD,EAClB7B,iBAEI+B,EAAAA,EAAAA,GAAoB,aACrB,MAAI,UAAWhC,GAUpB,MAAM,IAAIuB,MAAM,0BATV1B,EAAOgC,QAAQ,CACnB3B,QACAoB,SAAU,QACVE,YAAaxB,EAASyB,MACtBM,iBAAkBD,EAClB7B,iBAEI+B,EAAAA,EAAAA,GAAoB,QAG5B,CACF,CAEA,MAAMC,EAASf,UACb,GAA6B,kBAAlBL,GAA6C,IAAfiB,EAAII,SAI7CtB,EAAgB,QAEa,kBAAlBC,GAINhB,GAIL,IACEe,EAAgB,aAOhB,GAJ4C,iBAA1CC,EAAcsB,0BACbtB,EAAcuB,WAAavB,EAAcwB,aAI1C,GAAIxB,EAAcuB,UAChB,UACQP,EAAQC,EAChB,CAAE,MAAOJ,GACP,KAAIA,aAAaH,OAASG,EAAEY,QAAQC,SAAS,mBAG3C,MAAMb,CAEV,MAEA,UAEQG,EAAQC,EAChB,CAAE,MAAOJ,GACP,KAAIA,aAAaH,OAASG,EAAEY,QAAQC,SAAS,mBAI3C,MAAMb,CAEV,YAOIG,EAAQC,GACdhC,IAGFc,EAAgB,QAClB,CAAE,MAAOc,GAAG,IAAAc,EAERd,aAAaH,OACZ,OAADG,QAAC,IAADA,GAAU,QAATc,EAADd,EAAGY,eAAO,IAAAE,GAAVA,EAAYD,SAAS,2BAErB3B,EAAgB,oBAEhBA,EAAgB,WAElBe,QAAQC,MAAM,uBAAwBF,EACxC,GAIIe,GAAmBC,EAAAA,EAAAA,SAAO,GAQhC,OAPAC,EAAAA,EAAAA,YAAU,KACHF,EAAiBG,UACpBH,EAAiBG,SAAU,EAC3B5B,IACF,GACC,CAACA,IAEW,SAAXD,GAEA1D,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CAACqG,YAAU,EAACpG,KAAK,SAASqG,QAAQ,SAAQ/G,SAAA,EAClDF,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACuG,EAAE,KAAIhH,UACfF,EAAAA,EAAAA,KAACmH,EAAAA,GAAW,CAACC,MAAO1C,EAAO2C,OAAQC,OAAQpD,OAG7ClE,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAAC4G,QAAM,EAAC3G,KAAK,SAASE,OAAO,IAAGZ,UACxCsB,EAAAA,EAAAA,MAAA,QACEgG,SAAW3B,IACTA,EAAE4B,gBAAgB,EACnBvH,SAAA,EAEDsB,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CAACC,KAAK,SAASE,OAAO,IAAI4G,GAAG,KAAIxH,SAAA,EACvCsE,IAAexE,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QAC3B5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAAA3H,SAAEwE,EAAOoD,iBAAiBC,mBAC/B/H,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAACnE,MAAM,cAAaxD,SACtB,UAAWiE,EAAWA,EAASqB,MAAQrB,EAASyB,SAEnD5F,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,WAGZ5H,EAAAA,EAAAA,KAACF,EAAQ,CACPqB,UAA4B,YAAjB2D,EACXkD,OAAQ,EACRzH,MAAOoE,EACPrD,SAAWf,IACTqE,EAAYrE,GACZwE,EAAgB,OAAO,EAEzB1E,QAASA,KACP+F,EAAOzB,EAAS,IAIF,YAAjBG,IACCtD,EAAAA,EAAAA,MAAChC,EAAM,CAAAU,SAAA,EACLF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAACpD,KAAK,KAAKf,MAAM,SAAS5C,QAAM,EAAAZ,SAClCwE,EAAOoD,iBAAiBG,iBAKb,qBAAjBnD,IACCtD,EAAAA,EAAAA,MAAChC,EAAM,CAAAU,SAAA,EACLF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAACpD,KAAK,KAAKf,MAAM,SAAS5C,QAAM,EAAAZ,SAClCwE,EAAOwD,0BAKdlI,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QAEV5H,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAAC+G,GAAIlD,EAAc,MAAQ,KAAItE,SACrB,cAAjB4E,GACC9E,EAAAA,EAAAA,KAAAmI,EAAAA,SAAA,CAAAjI,UACEF,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACC,KAAK,MAAME,OAAO,IAAImG,QAAQ,SAAQ/G,UAC/CF,EAAAA,EAAAA,KAACoI,EAAAA,EAAO,CAAC3D,KAAK,KAAKf,MAAM,oBAI7B1D,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACsG,QAAQ,SAAQ/G,UACzBF,EAAAA,EAAAA,KAACqI,EAAAA,GAAM,CACLC,QAASA,IAAMlC,EAAOzB,GACtB4D,QAAQ,SACRC,KAAK,SACLC,MAAO,CACL/F,MAAO,QACRxC,SAEAwE,EAAOoD,iBAAiB1B,UATG,oBAepCpG,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QAERpD,IAAexE,EAAAA,EAAAA,KAAC0I,EAAAA,GAAI,KAEtBlH,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CAACuG,EAAG1C,OAAcmE,EAAY,KAAIzI,SAAA,CACvB,UAAlB8E,IACChF,EAAAA,EAAAA,KAAAmI,EAAAA,SAAA,CAAAjI,UACEF,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAACpD,KAAK,KAAK3D,QAAM,EAAC4C,MAAM,SAAQxD,SAClCwE,EAAOoD,iBAAiBc,qBAKZ,YAAlB5D,IACCxD,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CACRC,KAAK,MACLE,OAAO,OACPD,IAAI,KACJ4H,MAAO,CACL1F,UAAW,UACZ7C,SAAA,EAEDF,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAACpD,KAAK,KAAIvE,SAAEwE,EAAOoD,iBAAiBe,eACzC7I,EAAAA,EAAAA,KAACoI,EAAAA,EAAO,CAAC3D,KAAK,KAAKf,MAAM,qBAIH,kBAAlBsB,IACNhF,EAAAA,EAAAA,KAAC8I,EAAU,CAACR,QAASnD,EAAgBqD,KAAK,SAAQtI,SAC/CwE,EAAOoD,iBAAiBiB,wBAUlC,IACT,CAEA,MAAMD,GAA6BE,EAAAA,EAAAA,KAAa,KAC9C,MAAM/G,GAAQC,EAAAA,EAAAA,KACd,MAAO,CACL+G,IAAK,QACLvF,MAAOzB,EAAMY,OAAOY,WACpBT,SAAUA,EAAAA,EAASkG,GACnBC,OAAQ,UACRpG,UAAW,SACXqG,WAAY,IACZ1G,MAAO,OACP,UAAW,CACTgB,MAAOzB,EAAMY,OAAOC,aAEvB,I,0BCzTI,MAAMuG,EAA2BtJ,IAEpCyB,EAAAA,EAAAA,MAAA,OACEkB,MAAO3C,EAAM0E,KACb9B,OAAQ5C,EAAM0E,KACd6E,QAAQ,YACRC,KAAK,OAAM,cACC,OAAMrJ,SAAA,EAElBF,EAAAA,EAAAA,KAAA,QACEwJ,EAAE,4IACFC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,WAEjB5J,EAAAA,EAAAA,KAAA,QACEwJ,EAAE,mEACFC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,WAEjB5J,EAAAA,EAAAA,KAAA,QACEwJ,EAAE,wDACFC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,WAEjB5J,EAAAA,EAAAA,KAAA,QACEwJ,EAAE,oMACFC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,WAEjB5J,EAAAA,EAAAA,KAAA,QACEwJ,EAAE,sBACFC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,WAEjB5J,EAAAA,EAAAA,KAAA,QACEwJ,EAAE,wCACFC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,WAEjB5J,EAAAA,EAAAA,KAAA,QACEwJ,EAAE,+FACFC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,WAEjB5J,EAAAA,EAAAA,KAAA,QACEwJ,EAAE,qDACFC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,WAEjB5J,EAAAA,EAAAA,KAAA,QACEwJ,EAAE,kMACFC,OAAO,eACPC,YAAY,IACZC,cAAc,QACdC,eAAe,aClDjB,SAAUC,EAAwB9J,GAKtC,MAAM,OAAEqE,EAAM,aAAEE,EAAY,MAAED,IAAUE,EAAAA,EAAAA,MAClC,OAAEP,EAAM,KAAEC,GAASlE,GAClBmF,EAAQ4E,IAAajF,EAAAA,EAAAA,UAE1B,WAEIkF,GAAYlD,EAAAA,EAAAA,SAAO,GAoBzB,OAnBAC,EAAAA,EAAAA,YAAU,KACJiD,EAAUhD,UAIdgD,EAAUhD,SAAU,GACpBiD,EAAAA,EAAAA,IAAiB5F,GACd6F,MAAMC,IAEHJ,EADEI,EACQ,QAEA,SACZ,IAEDC,OAAM,KACLL,EAAU,SAAS,IACnB,GACH,CAAC1F,KAGF5C,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CAACsG,QAAQ,SAASD,YAAU,EAACpG,KAAK,SAAQV,SAAA,EAClDF,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACuG,EAAE,KAAIhH,UACfF,EAAAA,EAAAA,KAACmH,EAAAA,GAAW,CAACC,MAAM,UAAUE,OAAQvH,EAAMuH,YAG7CtH,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CACR+G,GAA0B,SAAtBpD,EAAaG,KAAkB,MAAQ,KAC3C8C,QAAM,EACN3G,KAAK,SACLE,OAAO,IAAGZ,UAEVsB,EAAAA,EAAAA,MAAA,OAAAtB,SAAA,CACc,YAAXgF,IACC1D,EAAAA,EAAAA,MAAA2G,EAAAA,SAAA,CAAAjI,SAAA,EACEF,EAAAA,EAAAA,KAACoK,EAAAA,EAAa,KACdpK,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,WAIF,WAAX1C,IACClF,EAAAA,EAAAA,KAACqK,EAAiB,CAChBC,SAAUA,KACRR,EAAU,QAAQ,EAEpBS,SAAUA,KACRT,EAAU,SAAS,IAKb,UAAX5E,IACClF,EAAAA,EAAAA,KAACwK,EAAW,CACVxG,OAAQA,EACRI,OAAQA,EACRH,KAAMA,EACNwG,SAAUA,KACRX,EAAU,SAAS,EAErBzF,MAAOA,IAIC,WAAXa,IACClF,EAAAA,EAAAA,KAAC0K,EAAY,CACX1G,OAAQA,EACRI,OAAQA,EACRH,KAAMA,EACNI,MAAOA,WAOrB,CAEA,SAASmG,EAAYzK,GAOnB,MAAM,OAAEiE,EAAM,KAAEC,EAAI,OAAEG,EAAM,MAAEC,GAAUtE,GACjCuF,EAAQqF,IAAa9F,EAAAA,EAAAA,UAA8B,WAE1DQ,eAAeuF,IACbD,EAAU,WACV,UACQ3G,EAAOgC,QAAQ,CACnB5B,OAAQA,EACRqB,SAAU,UACV+C,KAAM,UACNnE,gBAEI8B,EAAAA,EAAAA,GAAoB,WAC1BlC,GACF,CAAE,MACA0G,EAAU,QACZ,CACF,CAEA,MAAMZ,GAAYlD,EAAAA,EAAAA,SAAO,GAUzB,OATAC,EAAAA,EAAAA,YAAU,KACJiD,EAAUhD,UAIdgD,EAAUhD,SAAU,EACpB6D,IAAO,IAGM,YAAXtF,GAEAtF,EAAAA,EAAAA,KAAC6K,EAAY,CACXzD,MAAM,qBACN0D,SAAS,mEAKA,UAAXxF,GAEA9D,EAAAA,EAAAA,MAAA2G,EAAAA,SAAA,CAAAjI,SAAA,EACEF,EAAAA,EAAAA,KAAC+K,EAAU,CAACC,WAAYJ,EAAOxD,MAAM,qBACrCpH,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAACqI,EAAAA,GAAM,CAACE,QAAQ,UAAU0C,WAAS,EAAC3C,QAASvI,EAAM0K,SAAQvK,SAAA,0BAG3DF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,UAKT,IACT,CAEA,SAAS8C,EAAa3K,GAMpB,MAAM,OAAEiE,EAAM,KAAEC,EAAI,OAAEG,EAAM,MAAEC,GAAUtE,GACjCuF,EAAQqF,IAAa9F,EAAAA,EAAAA,UAA8B,WAE1DQ,eAAe6F,IACbP,EAAU,WACV,UACQ3G,EAAOgC,QAAQ,CACnB5B,OAAQA,EACRqB,SAAU,UACV+C,KAAM,UACNnE,gBAEI8B,EAAAA,EAAAA,GAAoB,WAC1BlC,GACF,CAAE,MACA0G,EAAU,QACZ,CACF,CAEA,MAAMZ,GAAYlD,EAAAA,EAAAA,SAAO,GAUzB,OATAC,EAAAA,EAAAA,YAAU,KACJiD,EAAUhD,UAIdgD,EAAUhD,SAAU,EACpBmE,IAAQ,IAGK,YAAX5F,GAEAtF,EAAAA,EAAAA,KAAC6K,EAAY,CACXzD,MAAM,mBACN0D,SAAS,mEAKA,UAAXxF,GAEA9D,EAAAA,EAAAA,MAAA2G,EAAAA,SAAA,CAAAjI,SAAA,EACEF,EAAAA,EAAAA,KAAC+K,EAAU,CAACC,WAAYE,EAAQ9D,MAAM,8BACtCpH,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,UAKT,IACT,CAEA,SAASyC,EAAkBtK,GAIzB,OACEyB,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CAAAT,SAAA,EACRF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,SACV5H,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACC,KAAK,MAAME,OAAO,IAAI4C,MAAM,aAAYxD,UACjDF,EAAAA,EAAAA,KAACqJ,EAAe,CAAC5E,KAAM0G,EAAAA,GAAS,YAElCnL,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,SAEV5H,EAAAA,EAAAA,KAACqI,EAAAA,GAAM,CAACE,QAAQ,SAASD,QAASvI,EAAMwK,SAAUU,WAAS,EAAA/K,SAAA,sBAI3DF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAACqI,EAAAA,GAAM,CAACE,QAAQ,UAAUD,QAASvI,EAAMuK,SAAUW,WAAS,EAAA/K,SAAA,sBAI5DF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,SAGhB,CAEA,SAASmD,EAAWhL,GAIlB,OACEyB,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CAACsG,QAAQ,SAAQ/G,SAAA,EACzBF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,SACV5H,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACC,KAAK,MAAME,OAAO,IAAGZ,UAC9BF,EAAAA,EAAAA,KAACoL,EAAAA,EAAc,CAAC3G,KAAM0G,EAAAA,GAAS,YAEjCnL,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAAC/G,QAAM,EAAC4C,MAAM,cAAce,KAAK,KAAIvE,SACvCH,EAAMqH,SAETpH,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,SACV5H,EAAAA,EAAAA,KAACqI,EAAAA,GAAM,CAACE,QAAQ,SAAS0C,WAAS,EAAC3C,QAASvI,EAAMiL,WAAU9K,SAAA,gBAKlE,CAEA,SAAS2K,EAAa9K,GAIpB,OACEyB,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CAACsG,QAAQ,SAAQ/G,SAAA,EACzBF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,SACVpG,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CACRC,KAAK,MACLE,OAAO,IACP2H,MAAO,CACLtG,SAAU,YACXjC,SAAA,EAEDF,EAAAA,EAAAA,KAACoI,EAAAA,EAAO,CAAC3D,KAAK,MAAMf,MAAM,gBAC1B1D,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CACR+C,MAAM,aACN+E,MAAO,CACLtG,SAAU,WACVkJ,IAAK,MACLC,KAAM,MACNC,UAAW,yBACZrL,UAEDF,EAAAA,EAAAA,KAACqJ,EAAe,CAAC5E,KAAM0G,EAAAA,GAASK,YAGpCxL,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAAC/G,QAAM,EAAC4C,MAAM,cAAce,KAAK,KAAIvE,SACvCH,EAAMqH,SAETpH,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAAC4D,WAAS,EAAC3K,QAAM,EAAAZ,SACnBH,EAAM+K,YAET9K,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,SACV5H,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,UAGhB,C,eCzSM,SAAU8D,EAAuB3L,GAOtC,IAAA4L,EACC,MAAMC,EAAW7L,EAAM2E,OACjBA,EAASkH,EAASC,kBAClBC,GAAW5J,EAAAA,EAAAA,MACX,aAAEoC,IAAiBC,EAAAA,EAAAA,MAClBwH,EAAWC,IAAgBnH,EAAAA,EAAAA,eAA6B8D,IACzD,KAAE1E,EAAI,OAAED,GAAWjE,GAClBuF,EAAQqF,IAAa9F,EAAAA,EAAAA,UAC1B,eAEI,OAAET,EAAM,MAAEC,IAAUE,EAAAA,EAAAA,KAsCpB0H,EAAyB,QAAdN,EAAG5L,EAAMmM,aAAK,IAAAP,OAAA,EAAXA,EAAaM,YAE3BE,GAAqBtF,EAAAA,EAAAA,SAAO,GAoBlC,OAnBAC,EAAAA,EAAAA,YAAU,KACJqF,EAAmBpF,SAInBkF,IACFE,EAAmBpF,SAAU,EAC7B4D,EAAU,cACVsB,EAAYG,kBACTnC,MAAK,KACJhG,IACA0G,EAAU,YAAY,IAEvBR,OAAM,KACLQ,EAAU,QAAQ,IAExB,GACC,CAAC1G,EAAMgI,KAGRjM,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACsG,QAAQ,SAASrG,KAAK,SAASoG,YAAU,EAAA9G,UAClDsB,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CACRC,KAAK,SACL2G,QAAM,EACNL,EAAE,KACFuB,MAAO,CACL4D,cAAe,GAChBnM,SAAA,CAEAH,EAAMmE,SACLlE,EAAAA,EAAAA,KAACmH,EAAAA,GAAW,CAACC,MAAO1C,EAAO0C,MAAOE,OAAQvH,EAAMmE,SAG3B,YAAtBI,EAAaG,MAAqBzE,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,OAAU,MAEvDpG,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CACRC,KAAK,SACLE,OAAO,OACPyG,QAAM,EACNkB,MAAO,CACL1F,UAAW,SACXuJ,UAAW,SACZpM,SAAA,CAEW,UAAXoF,IACC9D,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CAACsG,QAAQ,SAAQ/G,SAAA,EACzBF,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CACHnE,MAAM,cACN5C,QAAM,EACN2K,WAAS,EACThD,MAAO,CACLlH,SAAU,SACXrB,SAEAwE,EAAO6H,eAEVvM,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACG,OAAO,IAAIF,KAAK,MAAKV,UAC9BF,EAAAA,EAAAA,KAACoI,EAAAA,EAAO,CAAC3D,KAAK,KAAKf,MAAM,kBAG3B1D,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,WAIF,UAAXtC,IACC9D,EAAAA,EAAAA,MAACb,EAAAA,GAAS,CAACsG,QAAQ,SAAQ/G,SAAA,EACzBF,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAACnE,MAAM,SAAQxD,SAAEwE,EAAO8H,SAC5BT,IAAa/L,EAAAA,EAAAA,KAAC6H,EAAAA,EAAI,CAACnE,MAAM,SAAQxD,SAAE6L,KACpC/L,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,QACV5H,EAAAA,EAAAA,KAACqI,EAAAA,GAAM,CAACE,QAAQ,UAAUD,QA7GZjD,UACxB,IACE,MAAMoH,GAAeC,EAAAA,EAAAA,GAAsB3M,EAAM4M,WAAYb,GAE7D,IAAKW,EACH,MAAM,IAAI/G,MAAM,kBAAD/F,OAAmBI,EAAM4M,WAAU,kBAGpDhC,EAAU,oBACJ3G,EAAOgC,QAAQ,CACnB3B,QACAoB,SAAU1F,EAAM4M,WAChBC,aAAcH,EACdI,kBAAoBD,IAClBA,EAAaE,OAAO,EAEtB1I,iBAEI+B,EAAAA,EAAAA,GAAoBpG,EAAM4M,YAChChC,EAAU,aACV1G,GACF,CAAE,MAAO4B,GAAG,IAAAc,EACVgE,EAAU,SAIR9E,aAAaH,OACZ,OAADG,QAAC,IAADA,GAAU,QAATc,EAADd,EAAGY,eAAO,IAAAE,GAAVA,EAAYD,SAAS,4BAErBsF,EAAaJ,EAAS1D,qBAExBpC,QAAQC,MAAM,sBAADpG,OAAuBI,EAAM4M,YAAc9G,EAC1D,GA6E8D3F,SACjDwE,EAAOqI,SAEV/M,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,CAACC,EAAE,kBAOxB,C,eChEA,QA1EA,SAA8B7H,GAK5B,MAAMiN,GAAOC,EAAAA,EAAAA,MACPC,GAAmBC,EAAAA,EAAAA,MACnBjB,EAAQc,EACRtI,GAAS0I,EAAAA,EAAAA,MACT,aAAE9I,IAAiBC,EAAAA,EAAAA,KAEzB,IAAKG,EACH,OAAO1E,EAAAA,EAAAA,KAACoK,EAAAA,EAAa,IAGvB,MAAMiD,EACkB,YAAtB/I,EAAaG,KACT1E,EAAMmE,OACN,KACEgJ,EAAiB,CAAC,EAAE,EAGtBI,EAAmB,OAALpB,QAAK,IAALA,GAAAA,EAAOqB,WACvB,CAAE/H,MAAO0G,EAAMqB,YACV,OAALrB,QAAK,IAALA,GAAAA,EAAOsB,WACL,CAAE5H,MAAOsG,EAAMsB,iBACf7E,EAEN,OAAI2E,GAEAtN,EAAAA,EAAAA,KAAC+D,EAAqB,CACpBI,SAAUmJ,EACV5I,OAAQA,EACRT,KAAMlE,EAAMkE,KACZC,OAAQmJ,EACRrJ,OAAQjE,EAAMiE,SAKX,OAALkI,QAAK,IAALA,GAAAA,EAAOuB,cAEPzN,EAAAA,EAAAA,KAAC6J,EAAuB,CACtB7F,OAAQjE,EAAMiE,OACdC,KAAMlE,EAAMkE,KACZqD,OAAQ+F,IAKL,OAALnB,QAAK,IAALA,GAAAA,EAAOD,aAEPjM,EAAAA,EAAAA,KAAC0L,EAAsB,CACrBiB,WAAYT,EAAMD,YAAYzD,KAC9B9D,OAAQA,EACRT,KAAMlE,EAAMkE,KACZC,OAAQmJ,EACRrJ,OAAQjE,EAAMiE,OACdkI,MAAOA,KAMXlM,EAAAA,EAAAA,KAAC0N,EAAAA,EAAuB,CACtBC,OAAQA,OACRjJ,OAAQA,EACRT,KAAMlE,EAAMkE,KACZC,OAAQnE,EAAMmE,OACdF,OAAQjE,EAAMiE,QAGpB,C","sources":["../node_modules/thirdweb/src/react/web/ui/components/FadeIn.tsx","../node_modules/thirdweb/src/react/web/ui/components/OTPInput.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletOTPLoginUI.tsx","../node_modules/thirdweb/src/react/web/ui/ConnectWallet/icons/FingerPrintIcon.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletPassKeyLogin.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletSocialLogin.tsx","../node_modules/thirdweb/src/react/web/wallets/in-app/InAppWalletConnectUI.tsx"],"sourcesContent":["import { fadeInAnimation } from \"../design-system/animations.js\";\nimport { StyledDiv } from \"../design-system/elements.js\";\n\nexport const FadeIn = /* @__PURE__ */ StyledDiv({\n  animation: `${fadeInAnimation} 0.15s ease-in`,\n});\n","\"use client\";\nimport { keyframes } from \"@emotion/react\";\nimport { OTPInput as InputOTP, type SlotProps } from \"input-otp\";\nimport { useCustomTheme } from \"../design-system/CustomThemeProvider.js\";\nimport { StyledDiv } from \"../design-system/elements.js\";\nimport { fontSize, radius, spacing } from \"../design-system/index.js\";\nimport { Container } from \"./basic.js\";\n\n/**\n * @internal\n */\nexport function OTPInput(props: {\n  digits: number;\n  isInvalid?: boolean;\n  value: string;\n  setValue: (value: string) => void;\n  onEnter: () => void;\n}) {\n  return (\n    <OTPInputContainer>\n      <InputOTP\n        onComplete={() => {\n          props.onEnter();\n        }}\n        maxLength={6}\n        value={props.value}\n        render={({ slots }) => (\n          <Container flex=\"row\" gap=\"xs\" center=\"both\">\n            {slots.map((slot, idx) => (\n              // biome-ignore lint/suspicious/noArrayIndexKey: index is the only valid key here\n              <Slot key={idx} {...slot} isInvalid={props.isInvalid} />\n            ))}\n          </Container>\n        )}\n        onChange={(newValue) => {\n          props.setValue(newValue);\n        }}\n      />\n    </OTPInputContainer>\n  );\n}\n\nconst OTPInputContainer = /* @__PURE__ */ StyledDiv({\n  \"& input\": {\n    maxWidth: \"100%\",\n  },\n});\n\nfunction Slot(props: SlotProps & { isInvalid?: boolean }) {\n  return (\n    <OTPInputBox data-active={props.isActive} data-error={props.isInvalid}>\n      {props.char !== null && <div>{props.char}</div>}\n      {props.hasFakeCaret && <FakeCaret />}\n    </OTPInputBox>\n  );\n}\n\nconst caretBlink = keyframes`\n  0%, 100% {\n    opacity: 0;\n  },\n  50% {\n    opacity: 1;\n  }\n  `;\n\nconst FakeCaret = StyledDiv(() => {\n  const theme = useCustomTheme();\n  return {\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    inset: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    animation: `${caretBlink} 1s infinite`,\n    \"&::before\": {\n      content: \"''\",\n      display: \"block\",\n      width: \"1.5px\",\n      height: \"1em\",\n      backgroundColor: theme.colors.primaryText,\n    },\n  };\n});\n\nconst OTPInputBox = /* @__PURE__ */ StyledDiv(() => {\n  const theme = useCustomTheme();\n  return {\n    position: \"relative\",\n    width: \"40px\",\n    height: \"40px\",\n    textAlign: \"center\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: fontSize.md,\n    padding: spacing.xs,\n    boxSizing: \"border-box\",\n    transition: \"color 200ms ease\",\n    border: `2px solid ${theme.colors.borderColor}`,\n    \"&[data-active='true']\": {\n      borderColor: theme.colors.accentText,\n    },\n    color: theme.colors.primaryText,\n    borderRadius: radius.lg,\n    \"&[data-error='true']\": {\n      borderColor: theme.colors.danger,\n    },\n  };\n});\n","\"use client\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { preAuthenticate } from \"../../../../wallets/in-app/core/authentication/index.js\";\nimport type { SendEmailOtpReturnType } from \"../../../../wallets/in-app/core/authentication/type.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport { FadeIn } from \"../../ui/components/FadeIn.js\";\nimport { OTPInput } from \"../../ui/components/OTPInput.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Spinner } from \"../../ui/components/Spinner.js\";\nimport { Container, Line, ModalHeader } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport { useCustomTheme } from \"../../ui/design-system/CustomThemeProvider.js\";\nimport { StyledButton } from \"../../ui/design-system/elements.js\";\nimport { fontSize } from \"../../ui/design-system/index.js\";\nimport type { InAppWalletLocale } from \"./locale/types.js\";\nimport { setLastAuthProvider } from \"./storage.js\";\n\ntype VerificationStatus =\n  | \"verifying\"\n  | \"invalid\"\n  | \"valid\"\n  | \"idle\"\n  | \"payment_required\";\ntype AccountStatus = \"sending\" | SendEmailOtpReturnType | \"error\";\ntype ScreenToShow = \"base\" | \"enter-password-or-recovery-code\";\n\n/**\n * @internal\n */\nexport function InAppWalletOTPLoginUI(props: {\n  userInfo: { email: string } | { phone: string };\n  wallet: Wallet<\"inApp\">;\n  locale: InAppWalletLocale;\n  done: () => void;\n  goBack?: () => void;\n}) {\n  const { wallet, done, goBack, userInfo } = props;\n  const { client, chain, connectModal } = useConnectUI();\n  const isWideModal = connectModal.size === \"wide\";\n  const locale = props.locale;\n  const [otpInput, setOtpInput] = useState(\"\");\n  const [verifyStatus, setVerifyStatus] = useState<VerificationStatus>(\"idle\");\n  const [accountStatus, setAccountStatus] = useState<AccountStatus>(\"sending\");\n\n  const [screen] = useState<ScreenToShow>(\"base\");\n\n  const sendEmailOrSms = useCallback(async () => {\n    setOtpInput(\"\");\n    setVerifyStatus(\"idle\");\n    setAccountStatus(\"sending\");\n\n    try {\n      if (\"email\" in userInfo) {\n        const status = await preAuthenticate({\n          email: userInfo.email,\n          strategy: \"email\",\n          client,\n        });\n        setAccountStatus(status);\n      } else if (\"phone\" in userInfo) {\n        const status = await preAuthenticate({\n          phoneNumber: userInfo.phone,\n          strategy: \"phone\",\n          client,\n        });\n        setAccountStatus(status);\n      } else {\n        throw new Error(\"Invalid userInfo\");\n      }\n    } catch (e) {\n      console.error(e);\n      setVerifyStatus(\"idle\");\n      setAccountStatus(\"error\");\n    }\n  }, [client, userInfo]);\n\n  async function connect(otp: string) {\n    if (\"email\" in userInfo) {\n      await wallet.connect({\n        chain,\n        strategy: \"email\",\n        email: userInfo.email,\n        verificationCode: otp,\n        client,\n      });\n      await setLastAuthProvider(\"email\");\n    } else if (\"phone\" in userInfo) {\n      await wallet.connect({\n        chain,\n        strategy: \"phone\",\n        phoneNumber: userInfo.phone,\n        verificationCode: otp,\n        client,\n      });\n      await setLastAuthProvider(\"phone\");\n    } else {\n      throw new Error(\"Invalid userInfo\");\n    }\n  }\n\n  const verify = async (otp: string) => {\n    if (typeof accountStatus !== \"object\" || otp.length !== 6) {\n      return;\n    }\n\n    setVerifyStatus(\"idle\");\n\n    if (typeof accountStatus !== \"object\") {\n      return;\n    }\n\n    if (!wallet) {\n      return;\n    }\n\n    try {\n      setVerifyStatus(\"verifying\");\n\n      const needsRecoveryCode =\n        accountStatus.recoveryShareManagement === \"USER_MANAGED\" &&\n        (accountStatus.isNewUser || accountStatus.isNewDevice);\n\n      // USER_MANAGED\n      if (needsRecoveryCode) {\n        if (accountStatus.isNewUser) {\n          try {\n            await connect(otp);\n          } catch (e) {\n            if (e instanceof Error && e.message.includes(\"encryption key\")) {\n              // setScreen(\"create-password\");\n            } else {\n              throw e;\n            }\n          }\n        } else {\n          try {\n            // verifies otp for UI feedback\n            await connect(otp);\n          } catch (e) {\n            if (e instanceof Error && e.message.includes(\"encryption key\")) {\n              // TODO: do we need this?\n              // setScreen(\"enter-password-or-recovery-code\");\n            } else {\n              throw e;\n            }\n          }\n        }\n      }\n\n      // AWS_MANAGED\n      else {\n        // verifies otp for UI feedback\n        await connect(otp);\n        done();\n      }\n\n      setVerifyStatus(\"valid\");\n    } catch (e) {\n      if (\n        e instanceof Error &&\n        e?.message?.includes(\"PAYMENT_METHOD_REQUIRED\")\n      ) {\n        setVerifyStatus(\"payment_required\");\n      } else {\n        setVerifyStatus(\"invalid\");\n      }\n      console.error(\"Authentication Error\", e);\n    }\n  };\n\n  // send email on mount\n  const emailSentOnMount = useRef(false);\n  useEffect(() => {\n    if (!emailSentOnMount.current) {\n      emailSentOnMount.current = true;\n      sendEmailOrSms();\n    }\n  }, [sendEmailOrSms]);\n\n  if (screen === \"base\") {\n    return (\n      <Container fullHeight flex=\"column\" animate=\"fadein\">\n        <Container p=\"lg\">\n          <ModalHeader title={locale.signIn} onBack={goBack} />\n        </Container>\n\n        <Container expand flex=\"column\" center=\"y\">\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            <Container flex=\"column\" center=\"x\" px=\"lg\">\n              {!isWideModal && <Spacer y=\"xl\" />}\n              <Text>{locale.emailLoginScreen.enterCodeSendTo}</Text>\n              <Spacer y=\"sm\" />\n              <Text color=\"primaryText\">\n                {\"email\" in userInfo ? userInfo.email : userInfo.phone}\n              </Text>\n              <Spacer y=\"xl\" />\n            </Container>\n\n            <OTPInput\n              isInvalid={verifyStatus === \"invalid\"}\n              digits={6}\n              value={otpInput}\n              setValue={(value) => {\n                setOtpInput(value);\n                setVerifyStatus(\"idle\"); // reset error\n              }}\n              onEnter={() => {\n                verify(otpInput);\n              }}\n            />\n\n            {verifyStatus === \"invalid\" && (\n              <FadeIn>\n                <Spacer y=\"md\" />\n                <Text size=\"sm\" color=\"danger\" center>\n                  {locale.emailLoginScreen.invalidCode}\n                </Text>\n              </FadeIn>\n            )}\n\n            {verifyStatus === \"payment_required\" && (\n              <FadeIn>\n                <Spacer y=\"md\" />\n                <Text size=\"sm\" color=\"danger\" center>\n                  {locale.maxAccountsExceeded}\n                </Text>\n              </FadeIn>\n            )}\n\n            <Spacer y=\"xl\" />\n\n            <Container px={isWideModal ? \"xxl\" : \"lg\"}>\n              {verifyStatus === \"verifying\" ? (\n                <>\n                  <Container flex=\"row\" center=\"x\" animate=\"fadein\">\n                    <Spinner size=\"lg\" color=\"accentText\" />\n                  </Container>\n                </>\n              ) : (\n                <Container animate=\"fadein\" key=\"btn-container\">\n                  <Button\n                    onClick={() => verify(otpInput)}\n                    variant=\"accent\"\n                    type=\"submit\"\n                    style={{\n                      width: \"100%\",\n                    }}\n                  >\n                    {locale.emailLoginScreen.verify}\n                  </Button>\n                </Container>\n              )}\n            </Container>\n\n            <Spacer y=\"xl\" />\n\n            {!isWideModal && <Line />}\n\n            <Container p={isWideModal ? undefined : \"lg\"}>\n              {accountStatus === \"error\" && (\n                <>\n                  <Text size=\"sm\" center color=\"danger\">\n                    {locale.emailLoginScreen.failedToSendCode}\n                  </Text>\n                </>\n              )}\n\n              {accountStatus === \"sending\" && (\n                <Container\n                  flex=\"row\"\n                  center=\"both\"\n                  gap=\"xs\"\n                  style={{\n                    textAlign: \"center\",\n                  }}\n                >\n                  <Text size=\"sm\">{locale.emailLoginScreen.sendingCode}</Text>\n                  <Spinner size=\"xs\" color=\"secondaryText\" />\n                </Container>\n              )}\n\n              {typeof accountStatus === \"object\" && (\n                <LinkButton onClick={sendEmailOrSms} type=\"button\">\n                  {locale.emailLoginScreen.resendCode}\n                </LinkButton>\n              )}\n            </Container>\n          </form>\n        </Container>\n      </Container>\n    );\n  }\n\n  return null;\n}\n\nconst LinkButton = /* @__PURE__ */ StyledButton(() => {\n  const theme = useCustomTheme();\n  return {\n    all: \"unset\",\n    color: theme.colors.accentText,\n    fontSize: fontSize.sm,\n    cursor: \"pointer\",\n    textAlign: \"center\",\n    fontWeight: 500,\n    width: \"100%\",\n    \"&:hover\": {\n      color: theme.colors.primaryText,\n    },\n  };\n});\n","import type { IconFC } from \"./types.js\";\n\nexport const FingerPrintIcon: IconFC = (props) => {\n  return (\n    <svg\n      width={props.size}\n      height={props.size}\n      viewBox=\"0 0 36 36\"\n      fill=\"none\"\n      aria-hidden=\"true\"\n    >\n      <path\n        d=\"M18.0001 15C17.2045 15 16.4414 15.3161 15.8788 15.8787C15.3162 16.4413 15.0001 17.2044 15.0001 18C15.0001 19.53 14.8501 21.765 14.6101 24\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M21.0002 19.6801C21.0002 23.2501 21.0002 29.2501 19.5002 33.0001\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M25.9348 31.53C26.1148 30.63 26.5798 28.08 26.6848 27\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M2.99976 18C2.99976 14.8518 3.99032 11.7833 5.83112 9.22935C7.67193 6.67536 10.2697 4.76531 13.2563 3.76975C16.243 2.77419 19.4672 2.74359 22.4723 3.6823C25.4773 4.621 28.1108 6.48141 29.9998 9\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M2.99976 24H3.01628\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M32.7 24C33 21 32.8965 15.969 32.7 15\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M7.49976 29.25C8.24976 27 8.99976 22.5 8.99976 18C8.99824 16.9783 9.17071 15.9638 9.50976 15\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M12.9751 33C13.2901 32.01 13.6501 31.02 13.8301 30\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M13.5 10.2C14.8686 9.40988 16.4211 8.99401 18.0014 8.99426C19.5818 8.99452 21.1342 9.41088 22.5025 10.2015C23.8708 10.9921 25.0069 12.129 25.7964 13.498C26.5859 14.867 27.001 16.4197 27 18V21\"\n        stroke=\"currentColor\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../exports/wallets.js\";\nimport { hasStoredPasskey } from \"../../../../wallets/in-app/web/lib/auth/passkeys.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport { AccentFailIcon } from \"../../ui/ConnectWallet/icons/AccentFailIcon.js\";\nimport { FingerPrintIcon } from \"../../ui/ConnectWallet/icons/FingerPrintIcon.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Spinner } from \"../../ui/components/Spinner.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport { iconSize } from \"../../ui/design-system/index.js\";\nimport { LoadingScreen } from \"../shared/LoadingScreen.js\";\nimport { setLastAuthProvider } from \"./storage.js\";\n\n// is passkey stored?\n// - login\n// else\n// - show login or signup options\n\nexport function InAppWalletPassKeyLogin(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  onBack?: () => void;\n}) {\n  const { client, connectModal, chain } = useConnectUI();\n  const { wallet, done } = props;\n  const [screen, setScreen] = useState<\n    \"select\" | \"login\" | \"loading\" | \"signup\"\n  >(\"loading\");\n\n  const triggered = useRef(false);\n  useEffect(() => {\n    if (triggered.current) {\n      return;\n    }\n\n    triggered.current = true;\n    hasStoredPasskey(client)\n      .then((isStored) => {\n        if (isStored) {\n          setScreen(\"login\");\n        } else {\n          setScreen(\"select\");\n        }\n      })\n      .catch(() => {\n        setScreen(\"select\");\n      });\n  }, [client]);\n\n  return (\n    <Container animate=\"fadein\" fullHeight flex=\"column\">\n      <Container p=\"lg\">\n        <ModalHeader title=\"Passkey\" onBack={props.onBack} />\n      </Container>\n\n      <Container\n        px={connectModal.size === \"wide\" ? \"xxl\" : \"lg\"}\n        expand\n        flex=\"column\"\n        center=\"y\"\n      >\n        <div>\n          {screen === \"loading\" && (\n            <>\n              <LoadingScreen />\n              <Spacer y=\"xxl\" />\n            </>\n          )}\n\n          {screen === \"select\" && (\n            <SelectLoginMethod\n              onSignin={() => {\n                setScreen(\"login\");\n              }}\n              onSignup={() => {\n                setScreen(\"signup\");\n              }}\n            />\n          )}\n\n          {screen === \"login\" && (\n            <LoginScreen\n              wallet={wallet}\n              client={client}\n              done={done}\n              onCreate={() => {\n                setScreen(\"signup\");\n              }}\n              chain={chain}\n            />\n          )}\n\n          {screen === \"signup\" && (\n            <SignupScreen\n              wallet={wallet}\n              client={client}\n              done={done}\n              chain={chain}\n            />\n          )}\n        </div>\n      </Container>\n    </Container>\n  );\n}\n\nfunction LoginScreen(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  client: ThirdwebClient;\n  onCreate: () => void;\n  chain?: Chain;\n}) {\n  const { wallet, done, client, chain } = props;\n  const [status, setStatus] = useState<\"loading\" | \"error\">(\"loading\");\n\n  async function login() {\n    setStatus(\"loading\");\n    try {\n      await wallet.connect({\n        client: client,\n        strategy: \"passkey\",\n        type: \"sign-in\",\n        chain,\n      });\n      await setLastAuthProvider(\"passkey\");\n      done();\n    } catch {\n      setStatus(\"error\");\n    }\n  }\n\n  const triggered = useRef(false);\n  useEffect(() => {\n    if (triggered.current) {\n      return;\n    }\n\n    triggered.current = true;\n    login();\n  });\n\n  if (status === \"loading\") {\n    return (\n      <LoadingState\n        title=\"Requesting Passkey\"\n        subtitle=\"A pop-up prompt will appear to sign-in and verify your passkey\"\n      />\n    );\n  }\n\n  if (status === \"error\") {\n    return (\n      <>\n        <ErrorState onTryAgain={login} title=\"Failed to Login\" />\n        <Spacer y=\"sm\" />\n        <Button variant=\"outline\" fullWidth onClick={props.onCreate}>\n          Create a new Passkey\n        </Button>\n        <Spacer y=\"lg\" />\n      </>\n    );\n  }\n\n  return null;\n}\n\nfunction SignupScreen(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  client: ThirdwebClient;\n  chain?: Chain;\n}) {\n  const { wallet, done, client, chain } = props;\n  const [status, setStatus] = useState<\"loading\" | \"error\">(\"loading\");\n\n  async function signup() {\n    setStatus(\"loading\");\n    try {\n      await wallet.connect({\n        client: client,\n        strategy: \"passkey\",\n        type: \"sign-up\",\n        chain,\n      });\n      await setLastAuthProvider(\"passkey\");\n      done();\n    } catch {\n      setStatus(\"error\");\n    }\n  }\n\n  const triggered = useRef(false);\n  useEffect(() => {\n    if (triggered.current) {\n      return;\n    }\n\n    triggered.current = true;\n    signup();\n  });\n\n  if (status === \"loading\") {\n    return (\n      <LoadingState\n        title=\"Creating Passkey\"\n        subtitle=\"A pop-up prompt will appear to sign-in and verify your passkey\"\n      />\n    );\n  }\n\n  if (status === \"error\") {\n    return (\n      <>\n        <ErrorState onTryAgain={signup} title=\"Failed to create passkey\" />\n        <Spacer y=\"lg\" />\n      </>\n    );\n  }\n\n  return null;\n}\n\nfunction SelectLoginMethod(props: {\n  onSignin: () => void;\n  onSignup: () => void;\n}) {\n  return (\n    <Container>\n      <Spacer y=\"xxl\" />\n      <Container flex=\"row\" center=\"x\" color=\"accentText\">\n        <FingerPrintIcon size={iconSize[\"4xl\"]} />\n      </Container>\n      <Spacer y=\"xl\" />\n      <Spacer y=\"xxl\" />\n\n      <Button variant=\"accent\" onClick={props.onSignup} fullWidth>\n        Create a Passkey\n      </Button>\n\n      <Spacer y=\"sm\" />\n      <Button variant=\"outline\" onClick={props.onSignin} fullWidth>\n        I have a Passkey\n      </Button>\n\n      <Spacer y=\"lg\" />\n    </Container>\n  );\n}\n\nfunction ErrorState(props: {\n  onTryAgain: () => void;\n  title: string;\n}) {\n  return (\n    <Container animate=\"fadein\">\n      <Spacer y=\"xxl\" />\n      <Container flex=\"row\" center=\"x\">\n        <AccentFailIcon size={iconSize[\"3xl\"]} />\n      </Container>\n      <Spacer y=\"lg\" />\n      <Text center color=\"primaryText\" size=\"lg\">\n        {props.title}\n      </Text>\n      <Spacer y=\"xl\" />\n      <Spacer y=\"xxl\" />\n      <Button variant=\"accent\" fullWidth onClick={props.onTryAgain}>\n        Try Again\n      </Button>\n    </Container>\n  );\n}\n\nfunction LoadingState(props: {\n  title: string;\n  subtitle: string;\n}) {\n  return (\n    <Container animate=\"fadein\">\n      <Spacer y=\"xxl\" />\n      <Container\n        flex=\"row\"\n        center=\"x\"\n        style={{\n          position: \"relative\",\n        }}\n      >\n        <Spinner size=\"4xl\" color=\"accentText\" />\n        <Container\n          color=\"accentText\"\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <FingerPrintIcon size={iconSize.xxl} />\n        </Container>\n      </Container>\n      <Spacer y=\"xl\" />\n      <Text center color=\"primaryText\" size=\"lg\">\n        {props.title}\n      </Text>\n      <Spacer y=\"md\" />\n      <Text multiline center>\n        {props.subtitle}\n      </Text>\n      <Spacer y=\"xxl\" />\n      <Spacer y=\"xxl\" />\n    </Container>\n  );\n}\n","\"use client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport type { InAppWalletSocialAuth } from \"../../../../wallets/in-app/core/wallet/types.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Spinner } from \"../../ui/components/Spinner.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { Text } from \"../../ui/components/text.js\";\nimport { useCustomTheme } from \"../../ui/design-system/CustomThemeProvider.js\";\nimport type { InAppWalletLocale } from \"./locale/types.js\";\nimport { openOauthSignInWindow } from \"./openOauthSignInWindow.js\";\nimport { setLastAuthProvider } from \"./storage.js\";\nimport type { InAppWalletSelectUIState } from \"./types.js\";\n\n/**\n * @internal\n */\nexport function InAppWalletSocialLogin(props: {\n  socialAuth: InAppWalletSocialAuth;\n  locale: InAppWalletLocale;\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  goBack?: () => void;\n  state: InAppWalletSelectUIState;\n}) {\n  const ewLocale = props.locale;\n  const locale = ewLocale.socialLoginScreen;\n  const themeObj = useCustomTheme();\n  const { connectModal } = useConnectUI();\n  const [authError, setAuthError] = useState<string | undefined>(undefined);\n  const { done, wallet } = props;\n  const [status, setStatus] = useState<\"connecting\" | \"connected\" | \"error\">(\n    \"connecting\",\n  );\n  const { client, chain } = useConnectUI();\n\n  const handleSocialLogin = async () => {\n    try {\n      const socialWindow = openOauthSignInWindow(props.socialAuth, themeObj);\n\n      if (!socialWindow) {\n        throw new Error(`Failed to open ${props.socialAuth} login window`);\n      }\n\n      setStatus(\"connecting\");\n      await wallet.connect({\n        chain,\n        strategy: props.socialAuth,\n        openedWindow: socialWindow,\n        closeOpenedWindow: (openedWindow) => {\n          openedWindow.close();\n        },\n        client,\n      });\n      await setLastAuthProvider(props.socialAuth);\n      setStatus(\"connected\");\n      done();\n    } catch (e) {\n      setStatus(\"error\");\n      // TODO this only happens on 'retry' button click, not on initial login\n      // should pass auth error message to this component\n      if (\n        e instanceof Error &&\n        e?.message?.includes(\"PAYMENT_METHOD_REQUIRED\")\n      ) {\n        setAuthError(ewLocale.maxAccountsExceeded);\n      }\n      console.error(`Error sign in with ${props.socialAuth}`, e);\n    }\n  };\n\n  // const { setModalVisibility } = props.connectUIProps.screenConfig;\n  const socialLogin = props.state?.socialLogin;\n\n  const socialLoginStarted = useRef(false);\n  useEffect(() => {\n    if (socialLoginStarted.current) {\n      return;\n    }\n\n    if (socialLogin) {\n      socialLoginStarted.current = true;\n      setStatus(\"connecting\");\n      socialLogin.connectionPromise\n        .then(() => {\n          done();\n          setStatus(\"connected\");\n        })\n        .catch(() => {\n          setStatus(\"error\");\n        });\n    }\n  }, [done, socialLogin]);\n\n  return (\n    <Container animate=\"fadein\" flex=\"column\" fullHeight>\n      <Container\n        flex=\"column\"\n        expand\n        p=\"lg\"\n        style={{\n          paddingBottom: 0,\n        }}\n      >\n        {props.goBack && (\n          <ModalHeader title={locale.title} onBack={props.goBack} />\n        )}\n\n        {connectModal.size === \"compact\" ? <Spacer y=\"xl\" /> : null}\n\n        <Container\n          flex=\"column\"\n          center=\"both\"\n          expand\n          style={{\n            textAlign: \"center\",\n            minHeight: \"250px\",\n          }}\n        >\n          {status !== \"error\" && (\n            <Container animate=\"fadein\">\n              <Text\n                color=\"primaryText\"\n                center\n                multiline\n                style={{\n                  maxWidth: \"250px\",\n                }}\n              >\n                {locale.instruction}\n              </Text>\n              <Spacer y=\"xl\" />\n              <Container center=\"x\" flex=\"row\">\n                <Spinner size=\"lg\" color=\"accentText\" />\n              </Container>\n\n              <Spacer y=\"xxl\" />\n            </Container>\n          )}\n\n          {status === \"error\" && (\n            <Container animate=\"fadein\">\n              <Text color=\"danger\">{locale.failed}</Text>\n              {authError && <Text color=\"danger\">{authError}</Text>}\n              <Spacer y=\"lg\" />\n              <Button variant=\"primary\" onClick={handleSocialLogin}>\n                {locale.retry}\n              </Button>\n              <Spacer y=\"xxl\" />\n            </Container>\n          )}\n        </Container>\n      </Container>\n    </Container>\n  );\n}\n","\"use client\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { useConnectUI } from \"../../../core/hooks/others/useWalletConnectionCtx.js\";\nimport {\n  useSelectionData,\n  useSetSelectionData,\n} from \"../../providers/wallet-ui-states-provider.js\";\nimport { LoadingScreen } from \"../shared/LoadingScreen.js\";\nimport { InAppWalletFormUIScreen } from \"./InAppWalletFormUI.js\";\nimport { InAppWalletOTPLoginUI } from \"./InAppWalletOTPLoginUI.js\";\nimport { InAppWalletPassKeyLogin } from \"./InAppWalletPassKeyLogin.js\";\nimport { InAppWalletSocialLogin } from \"./InAppWalletSocialLogin.js\";\nimport type { InAppWalletSelectUIState } from \"./types.js\";\nimport { useInAppWalletLocale } from \"./useInAppWalletLocale.js\";\n\n/**\n *\n * @internal\n */\nfunction InAppWalletConnectUI(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  goBack?: () => void;\n}) {\n  const data = useSelectionData();\n  const setSelectionData = useSetSelectionData();\n  const state = data as InAppWalletSelectUIState;\n  const locale = useInAppWalletLocale();\n  const { connectModal } = useConnectUI();\n\n  if (!locale) {\n    return <LoadingScreen />;\n  }\n\n  const goBackToMain =\n    connectModal.size === \"compact\"\n      ? props.goBack\n      : () => {\n          setSelectionData({});\n        };\n\n  const otpUserInfo = state?.emailLogin\n    ? { email: state.emailLogin }\n    : state?.phoneLogin\n      ? { phone: state.phoneLogin }\n      : undefined;\n\n  if (otpUserInfo) {\n    return (\n      <InAppWalletOTPLoginUI\n        userInfo={otpUserInfo}\n        locale={locale}\n        done={props.done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n      />\n    );\n  }\n\n  if (state?.passkeyLogin) {\n    return (\n      <InAppWalletPassKeyLogin\n        wallet={props.wallet}\n        done={props.done}\n        onBack={goBackToMain}\n      />\n    );\n  }\n\n  if (state?.socialLogin) {\n    return (\n      <InAppWalletSocialLogin\n        socialAuth={state.socialLogin.type}\n        locale={locale}\n        done={props.done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n        state={state}\n      />\n    );\n  }\n\n  return (\n    <InAppWalletFormUIScreen\n      select={() => {}}\n      locale={locale}\n      done={props.done}\n      goBack={props.goBack}\n      wallet={props.wallet}\n    />\n  );\n}\n\nexport default InAppWalletConnectUI;\n"],"names":["FadeIn","StyledDiv","animation","concat","fadeInAnimation","_templateObject","OTPInput","props","_jsx","OTPInputContainer","children","InputOTP","onComplete","onEnter","maxLength","value","render","_ref","slots","Container","flex","gap","center","map","slot","idx","Slot","isInvalid","onChange","newValue","setValue","maxWidth","_jsxs","OTPInputBox","isActive","char","hasFakeCaret","FakeCaret","caretBlink","keyframes","_taggedTemplateLiteral","theme","useCustomTheme","position","pointerEvents","inset","display","alignItems","justifyContent","content","width","height","backgroundColor","colors","primaryText","textAlign","fontSize","md","padding","spacing","xs","boxSizing","transition","border","borderColor","accentText","color","borderRadius","radius","lg","danger","InAppWalletOTPLoginUI","wallet","done","goBack","userInfo","client","chain","connectModal","useConnectUI","isWideModal","size","locale","otpInput","setOtpInput","useState","verifyStatus","setVerifyStatus","accountStatus","setAccountStatus","screen","sendEmailOrSms","useCallback","async","status","preAuthenticate","email","strategy","Error","phoneNumber","phone","e","console","error","connect","otp","verificationCode","setLastAuthProvider","verify","length","recoveryShareManagement","isNewUser","isNewDevice","message","includes","_e$message","emailSentOnMount","useRef","useEffect","current","fullHeight","animate","p","ModalHeader","title","signIn","onBack","expand","onSubmit","preventDefault","px","Spacer","y","Text","emailLoginScreen","enterCodeSendTo","digits","invalidCode","maxAccountsExceeded","_Fragment","Spinner","Button","onClick","variant","type","style","Line","undefined","failedToSendCode","sendingCode","LinkButton","resendCode","StyledButton","all","sm","cursor","fontWeight","FingerPrintIcon","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","InAppWalletPassKeyLogin","setScreen","triggered","hasStoredPasskey","then","isStored","catch","LoadingScreen","SelectLoginMethod","onSignin","onSignup","LoginScreen","onCreate","SignupScreen","setStatus","login","LoadingState","subtitle","ErrorState","onTryAgain","fullWidth","signup","iconSize","AccentFailIcon","top","left","transform","xxl","multiline","InAppWalletSocialLogin","_props$state","ewLocale","socialLoginScreen","themeObj","authError","setAuthError","socialLogin","state","socialLoginStarted","connectionPromise","paddingBottom","minHeight","instruction","failed","socialWindow","openOauthSignInWindow","socialAuth","openedWindow","closeOpenedWindow","close","retry","data","useSelectionData","setSelectionData","useSetSelectionData","useInAppWalletLocale","goBackToMain","otpUserInfo","emailLogin","phoneLogin","passkeyLogin","InAppWalletFormUIScreen","select"],"sourceRoot":""}