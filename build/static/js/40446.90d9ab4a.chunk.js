"use strict";(self.webpackChunkbru_finance=self.webpackChunkbru_finance||[]).push([[40446],{57322:(e,t,s)=>{s.d(t,{W:()=>r});var i=s(3754),n=s(28379);class r extends n.A{constructor(e){let{chains:t=i.k9b,options:s}=e;super(),this.chains=t,this.options=s}getBlockExplorerUrls(e){var t,s;const i=null!==(t=null===(s=e.explorers)||void 0===s?void 0:s.map((e=>e.url)))&&void 0!==t?t:[];return i.length>0?i:void 0}isChainUnsupported(e){return!this.chains.some((t=>t.chainId===e))}updateChains(e){this.chains=e}}},50646:(e,t,s)=>{s.d(t,{A:()=>o,C:()=>a,R:()=>h,S:()=>d,U:()=>u,a:()=>c});var i=s(10019);class n extends Error{constructor(e,t){const{cause:s,code:i,data:n}=t;if(!Number.isInteger(i))throw new Error('"code" must be an integer.');if(!e||"string"!==typeof e)throw new Error('"message" must be a nonempty string.');super("".concat(e,". Cause: ").concat(JSON.stringify(s))),this.cause=s,this.code=i,this.data=n}}class r extends n{constructor(e,t){const{cause:s,code:i,data:n}=t;if(!(Number.isInteger(i)&&i>=1e3&&i<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(e,{cause:s,code:i,data:n})}}class o extends Error{constructor(){super(...arguments),(0,i._)(this,"name","AddChainError"),(0,i._)(this,"message","Error adding chain")}}class a extends Error{constructor(e){let{chainId:t,connectorId:s}=e;super('Chain "'.concat(t,'" not configured for connector "').concat(s,'".')),(0,i._)(this,"name","ChainNotConfigured")}}class c extends Error{constructor(){super(...arguments),(0,i._)(this,"name","ConnectorNotFoundError"),(0,i._)(this,"message","Connector not found")}}class h extends n{constructor(e){super("Resource unavailable",{cause:e,code:-32002}),(0,i._)(this,"name","ResourceUnavailable")}}class d extends r{constructor(e){super("Error switching chain",{cause:e,code:4902}),(0,i._)(this,"name","SwitchChainError")}}class u extends r{constructor(e){super("User rejected request",{cause:e,code:4001}),(0,i._)(this,"name","UserRejectedRequestError")}}},40446:(e,t,s)=>{s.d(t,{WalletConnectConnector:()=>m});var i=s(10019),n=s(50646),r=s(48987),o=s(38045),a=s(89106),c=s(28518),h=s(84406),d=s(57322);s(28379);const u=new Set([1,137,10,42161,56]),l="eip155",p="wagmi.requestedChains",g="wallet_addEthereumChain",v="last-used-chain-id";class m extends d.W{constructor(e){super({...e,options:{isNewChainsStale:!0,...e.options}}),(0,i._)(this,"id",c.w.walletConnect),(0,i._)(this,"name","WalletConnect"),(0,i._)(this,"ready",!0),(0,i._)(this,"onAccountsChanged",(e=>{0===e.length?this.emit("disconnect"):e[0]&&this.emit("change",{account:r.getAddress(e[0])})})),(0,i._)(this,"onChainChanged",(async e=>{const t=Number(e),s=this.isChainUnsupported(t);await this._storage.setItem(v,String(e)),this.emit("change",{chain:{id:t,unsupported:s}})})),(0,i._)(this,"onDisconnect",(async()=>{await this._setRequestedChainsIds([]),await this._storage.removeItem(v),this.emit("disconnect")})),(0,i._)(this,"onDisplayUri",(e=>{this.emit("message",{type:"display_uri",data:e})})),(0,i._)(this,"onConnect",(()=>{this.emit("connect",{provider:this._provider})})),this._storage=e.options.storage,this._createProvider(),this.filteredChains=this.chains.length>50?this.chains.filter((e=>u.has(e.chainId))):this.chains,this.showWalletConnectModal=!1!==this.options.qrcode}async connect(){let{chainId:e,pairingTopic:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let i=e;if(!i){const e=await this._storage.getItem(v),t=e?parseInt(e):void 0;var s;if(t&&!this.isChainUnsupported(t))i=t;else i=null===(s=this.filteredChains[0])||void 0===s?void 0:s.chainId}if(!i)throw new Error("No chains found on connector.");const n=await this.getProvider();if(this.setupListeners(),n.session){await n.disconnect();const e=this.filteredChains.filter((e=>e.chainId!==i)).map((e=>e.chainId));this.emit("message",{type:"connecting"}),await n.connect({pairingTopic:t,chains:[i],optionalChains:e.length>0?e:[i]}),await this._setRequestedChainsIds(this.filteredChains.map((e=>{let{chainId:t}=e;return t})))}const a=await n.enable();if(!a[0])throw new Error("No accounts found on provider.");const c=r.getAddress(a[0]),h=await this.getChainId();return{account:c,chain:{id:h,unsupported:this.isChainUnsupported(h)},provider:new o.j(n)}}catch(i){if(/user rejected/i.test(null===i||void 0===i?void 0:i.message))throw new n.U(i);throw i}}async disconnect(){const e=()=>{if("undefined"!==typeof localStorage)for(const e in localStorage)e.startsWith("wc@2")&&localStorage.removeItem(e)};e();const t=await this.getProvider();(async()=>{try{await t.disconnect()}catch(s){if(!/No matching key/i.test(s.message))throw s}finally{this._removeListeners(),await this._setRequestedChainsIds([]),e()}})()}async getAccount(){const{accounts:e}=await this.getProvider();if(!e[0])throw new Error("No accounts found on provider.");return r.getAddress(e[0])}async getChainId(){const{chainId:e}=await this.getProvider();return e}async getProvider(){let{chainId:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(this._provider||await this._createProvider(),e&&await this.switchChain(e),!this._provider)throw new Error("No provider found.");return this._provider}async getSigner(){let{chainId:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const[t,s]=await Promise.all([this.getProvider({chainId:e}),this.getAccount()]);return new o.j(t,e).getSigner(s)}async isAuthorized(){try{const[e,t]=await Promise.all([this.getAccount(),this.getProvider()]),s=await this._isChainsStale();if(!e)return!1;if(s&&t.session){try{await t.disconnect()}catch{}return!1}return!0}catch{return!1}}async switchChain(e){const t=this.chains.find((t=>t.chainId===e));if(!t)throw new n.S("Chain with ID: ".concat(e,", not found on connector."));try{const s=await this.getProvider(),i=this._getNamespaceChainsIds(),n=this._getNamespaceMethods();if(!i.includes(e)&&n.includes(g)){const i=t.explorers&&t.explorers[0],n=i?{blockExplorerUrls:[i.url]}:{};await s.request({method:g,params:[{chainId:a.hexValue(t.chainId),chainName:t.name,nativeCurrency:t.nativeCurrency,rpcUrls:(0,h.g)(t),...n}]});const r=await this._getRequestedChainsIds();r.push(e),await this._setRequestedChainsIds(r)}return await s.request({method:"wallet_switchEthereumChain",params:[{chainId:a.hexValue(e)}]}),t}catch(s){const e="string"===typeof s?s:null===s||void 0===s?void 0:s.message;if(/user rejected request/i.test(e))throw new n.U(s);throw new n.S(s)}}async _createProvider(){return this._initProviderPromise||(this._initProviderPromise=this.initProvider()),this._initProviderPromise}async initProvider(){const{default:e,OPTIONAL_EVENTS:t,OPTIONAL_METHODS:i}=await s.e(79410).then(s.bind(s,79410)),[n,...r]=this.filteredChains.map((e=>{let{chainId:t}=e;return t}));n&&(this._provider=await e.init({showQrModal:this.showWalletConnectModal,projectId:this.options.projectId,optionalMethods:i,optionalEvents:t,chains:[n],optionalChains:r,metadata:{name:this.options.dappMetadata.name,description:this.options.dappMetadata.description||"",url:this.options.dappMetadata.url,icons:[this.options.dappMetadata.logoUrl||""]},rpcMap:Object.fromEntries(this.filteredChains.map((e=>[e.chainId,e.rpc[0]||""]))),qrModalOptions:this.options.qrModalOptions}))}async _isChainsStale(){if(this._getNamespaceMethods().includes(g))return!1;if(!this.options.isNewChainsStale)return!1;const e=await this._getRequestedChainsIds(),t=this.filteredChains.map((e=>{let{chainId:t}=e;return t})),s=this._getNamespaceChainsIds();return!(s.length&&!s.some((e=>t.includes(e))))&&!t.every((t=>e.includes(t)))}async setupListeners(){this._provider&&(this._removeListeners(),this._provider.on("accountsChanged",this.onAccountsChanged),this._provider.on("chainChanged",this.onChainChanged),this._provider.on("disconnect",this.onDisconnect),this._provider.on("session_delete",this.onDisconnect),this._provider.on("display_uri",this.onDisplayUri),this._provider.on("connect",this.onConnect))}_removeListeners(){this._provider&&(this._provider.removeListener("accountsChanged",this.onAccountsChanged),this._provider.removeListener("chainChanged",this.onChainChanged),this._provider.removeListener("disconnect",this.onDisconnect),this._provider.removeListener("session_delete",this.onDisconnect),this._provider.removeListener("display_uri",this.onDisplayUri),this._provider.removeListener("connect",this.onConnect))}async _setRequestedChainsIds(e){await this._storage.setItem(p,JSON.stringify(e))}async _getRequestedChainsIds(){const e=await this._storage.getItem(p);return e?JSON.parse(e):[]}_getNamespaceChainsIds(){var e;if(!this._provider)return[];const t=null===(e=this._provider.session)||void 0===e||null===(e=e.namespaces[l])||void 0===e||null===(e=e.chains)||void 0===e?void 0:e.map((e=>parseInt(e.split(":")[1]||"")));return null!==t&&void 0!==t?t:[]}_getNamespaceMethods(){var e;if(!this._provider)return[];const t=null===(e=this._provider.session)||void 0===e||null===(e=e.namespaces[l])||void 0===e?void 0:e.methods;return null!==t&&void 0!==t?t:[]}}}}]);
//# sourceMappingURL=40446.90d9ab4a.chunk.js.map